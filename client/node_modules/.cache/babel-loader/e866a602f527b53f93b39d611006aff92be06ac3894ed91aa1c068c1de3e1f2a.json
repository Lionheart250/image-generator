{"ast":null,"code":"var _jsxFileName = \"/Users/jack/image-generator/client/src/components/GalleryModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ReactComponent as LikeIcon } from '../assets/icons/like.svg';\nimport { ReactComponent as CommentIcon } from '../assets/icons/comment.svg';\nimport { ReactComponent as ShareIcon } from '../assets/icons/share.svg';\nimport { ReactComponent as BookmarkIcon } from '../assets/icons/bookmark.svg';\nimport './GalleryModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GalleryModal = ({\n  modalImage,\n  activeImageId,\n  isAdmin,\n  imageUserDetails,\n  images,\n  comments,\n  likes,\n  userLikedImages,\n  commentLikes,\n  commentInput,\n  onClose,\n  onNavigate,\n  onDelete,\n  onLike,\n  onCommentLike,\n  onCommentSubmit,\n  onUsernameClick,\n  formatDate,\n  formatTimestamp,\n  setCommentInput\n}) => {\n  _s();\n  var _imageUserDetails$act, _imageUserDetails$act4, _images$find, _images$find2, _comments$activeImage;\n  const [isPromptExpanded, setIsPromptExpanded] = useState(false);\n  const closeModal = () => {\n    setModalImage(null);\n    setActiveImageId(null);\n    navigate('', {\n      replace: true\n    });\n  };\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    try {\n      const decoded = jwtDecode(token);\n      const userId = decoded.userId;\n\n      // Post the new comment\n      const response = await fetch('http://localhost:3000/add_comment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          userId,\n          imageId: activeImageId,\n          comment: commentInput\n        })\n      });\n      if (response.ok) {\n        // After adding the comment, fetch all comments again\n        const commentsResponse = await fetch(`http://localhost:3000/fetch_comments?id=${activeImageId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (commentsResponse.ok) {\n          const commentsData = await commentsResponse.json();\n          // Update comments state with the latest comments\n          setComments(prev => ({\n            ...prev,\n            [activeImageId]: commentsData.comments // Use the fetched comments\n          }));\n          setCommentInput(''); // Clear the comment input\n        } else {\n          console.error('Error fetching comments:', await commentsResponse.json());\n        }\n      } else {\n        console.error('Error adding comment:', await response.json());\n      }\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n  const handleDeleteImage = async imageId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:3000/images/${imageId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to delete image');\n      }\n      setImages(prev => prev.filter(img => img.id !== imageId));\n      closeModal();\n    } catch (error) {\n      console.error('Error deleting image:', error);\n      alert(error.message);\n    }\n  };\n  const fetchCommentLikeCount = async commentId => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch(`http://localhost:3000/comment_likes/${commentId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch like count');\n      const data = await response.json();\n      setCommentLikes(prev => ({\n        ...prev,\n        [commentId]: data.count\n      }));\n    } catch (error) {\n      console.error('Error fetching comment like count:', error);\n    }\n  };\n  const handleLike = async imageId => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    const isLiked = userLikedImages.has(imageId);\n    try {\n      const response = await fetch(`http://localhost:3000/likes/${imageId}`, {\n        method: isLiked ? 'DELETE' : 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to ${isLiked ? 'unlike' : 'like'} image`);\n      }\n      const data = await response.json();\n\n      // Update likes count\n      setLikes(prev => ({\n        ...prev,\n        [imageId]: data.count\n      }));\n\n      // Toggle like status\n      setUserLikedImages(prev => {\n        const newSet = new Set(prev);\n        if (isLiked) {\n          newSet.delete(imageId);\n        } else {\n          newSet.add(imageId);\n        }\n        return newSet;\n      });\n    } catch (error) {\n      console.error('Error toggling like:', error);\n    }\n  };\n  const handleCommentLike = async commentId => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    const isLiked = userLikedComments.has(commentId);\n    try {\n      const response = await fetch(`http://localhost:3000/comment_likes/${commentId}`, {\n        method: isLiked ? 'DELETE' : 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) throw new Error('Failed to toggle like');\n      setUserLikedComments(prev => {\n        const newSet = new Set(prev);\n        isLiked ? newSet.delete(commentId) : newSet.add(commentId);\n        return newSet;\n      });\n\n      // Fetch updated like count\n      await fetchCommentLikeCount(commentId);\n    } catch (error) {\n      console.error('Error toggling comment like:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-modal-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-modal-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gallery-modal-image-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"gallery-close-button\",\n            onClick: closeModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"gallery-nav-button gallery-prev\",\n            onClick: () => navigateImage(-1),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2039\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"gallery-modal-image\",\n            src: modalImage,\n            alt: \"Enlarged\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-delete-section\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-delete-button\",\n              onClick: () => handleDeleteImage(activeImageId),\n              children: \"Delete Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"gallery-nav-button gallery-next\",\n            onClick: () => navigateImage(1),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u203A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gallery-modal-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: ((_imageUserDetails$act = imageUserDetails[activeImageId]) === null || _imageUserDetails$act === void 0 ? void 0 : _imageUserDetails$act.profile_picture) || '/default-avatar.png',\n              alt: \"Profile\",\n              className: \"gallery-user-avatar\",\n              onClick: () => {\n                var _imageUserDetails$act2;\n                return handleUsernameClick((_imageUserDetails$act2 = imageUserDetails[activeImageId]) === null || _imageUserDetails$act2 === void 0 ? void 0 : _imageUserDetails$act2.user_id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gallery-user-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                onClick: () => {\n                  var _imageUserDetails$act3;\n                  return handleUsernameClick((_imageUserDetails$act3 = imageUserDetails[activeImageId]) === null || _imageUserDetails$act3 === void 0 ? void 0 : _imageUserDetails$act3.user_id);\n                },\n                children: (_imageUserDetails$act4 = imageUserDetails[activeImageId]) === null || _imageUserDetails$act4 === void 0 ? void 0 : _imageUserDetails$act4.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gallery-creation-date\",\n                children: formatDate((_images$find = images.find(img => img.id === activeImageId)) === null || _images$find === void 0 ? void 0 : _images$find.created_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-follow-button\",\n              children: \"Follow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-modal-title\",\n            children: (_images$find2 = images.find(img => img.id === activeImageId)) === null || _images$find2 === void 0 ? void 0 : _images$find2.prompt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-interaction-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLike(activeImageId),\n              className: \"gallery-action-btn\",\n              children: [/*#__PURE__*/_jsxDEV(LikeIcon, {\n                className: userLikedImages.has(activeImageId) ? 'liked' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: likes[activeImageId] || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-action-btn\",\n              children: [/*#__PURE__*/_jsxDEV(CommentIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: ((_comments$activeImage = comments[activeImageId]) === null || _comments$activeImage === void 0 ? void 0 : _comments$activeImage.length) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-action-btn\",\n              children: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-action-btn\",\n              children: /*#__PURE__*/_jsxDEV(BookmarkIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-comments-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"gallery-comments-heading\",\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"gallery-comments-list\",\n              children: (comments[activeImageId] || []).map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"gallery-comment-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"gallery-comment-avatar\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: comment.profile_picture ? `http://localhost:3000/${comment.profile_picture}` : '/default-avatar.png',\n                    alt: comment.username,\n                    onError: e => e.target.src = '/default-avatar.png'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"gallery-comment-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"gallery-comment-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"gallery-comment-username\",\n                      onClick: () => handleUsernameClick(comment.user_id),\n                      role: \"button\",\n                      tabIndex: 0,\n                      children: comment.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"gallery-comment-time\",\n                      children: formatTimestamp(comment.created_at)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"gallery-comment-text\",\n                    children: comment.comment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"gallery-comment-actions\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"gallery-comment-like-btn\",\n                      onClick: () => handleCommentLike(comment.id),\n                      children: [\"\\u2665 \", commentLikes[comment.id] || 0]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 41\n                }, this)]\n              }, `comment-${comment.id}-${comment.created_at}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleCommentSubmit,\n              className: \"gallery-comment-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"gallery-comment-input\",\n                type: \"text\",\n                value: commentInput,\n                onChange: e => setCommentInput(e.target.value),\n                placeholder: \"Add a comment...\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"gallery-comment-submit\",\n                children: \"Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 9\n  }, this);\n};\n_s(GalleryModal, \"38GV4fAPBjdkl8dZhiMOnA60fMs=\");\n_c = GalleryModal;\nexport default GalleryModal;\nvar _c;\n$RefreshReg$(_c, \"GalleryModal\");","map":{"version":3,"names":["React","useState","ReactComponent","LikeIcon","CommentIcon","ShareIcon","BookmarkIcon","jsxDEV","_jsxDEV","GalleryModal","modalImage","activeImageId","isAdmin","imageUserDetails","images","comments","likes","userLikedImages","commentLikes","commentInput","onClose","onNavigate","onDelete","onLike","onCommentLike","onCommentSubmit","onUsernameClick","formatDate","formatTimestamp","setCommentInput","_s","_imageUserDetails$act","_imageUserDetails$act4","_images$find","_images$find2","_comments$activeImage","isPromptExpanded","setIsPromptExpanded","closeModal","setModalImage","setActiveImageId","navigate","replace","handleCommentSubmit","e","preventDefault","token","localStorage","getItem","decoded","jwtDecode","userId","response","fetch","method","headers","Authorization","body","JSON","stringify","imageId","comment","ok","commentsResponse","commentsData","json","setComments","prev","console","error","handleDeleteImage","credentials","Error","setImages","filter","img","id","alert","message","fetchCommentLikeCount","commentId","data","setCommentLikes","count","handleLike","isLiked","has","setLikes","setUserLikedImages","newSet","Set","delete","add","handleCommentLike","userLikedComments","setUserLikedComments","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","navigateImage","src","alt","profile_picture","_imageUserDetails$act2","handleUsernameClick","user_id","_imageUserDetails$act3","username","find","created_at","prompt","length","map","onError","target","role","tabIndex","onSubmit","type","value","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/jack/image-generator/client/src/components/GalleryModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ReactComponent as LikeIcon } from '../assets/icons/like.svg';\nimport { ReactComponent as CommentIcon } from '../assets/icons/comment.svg';\nimport { ReactComponent as ShareIcon } from '../assets/icons/share.svg';\nimport { ReactComponent as BookmarkIcon } from '../assets/icons/bookmark.svg';\nimport './GalleryModal.css';\n\nconst GalleryModal = ({ \n    modalImage,\n    activeImageId,\n    isAdmin,\n    imageUserDetails,\n    images,\n    comments,\n    likes,\n    userLikedImages,\n    commentLikes,\n    commentInput,\n    onClose,\n    onNavigate,\n    onDelete,\n    onLike,\n    onCommentLike,\n    onCommentSubmit,\n    onUsernameClick,\n    formatDate,\n    formatTimestamp,\n    setCommentInput\n}) => {\n    const [isPromptExpanded, setIsPromptExpanded] = useState(false);\n\n    const closeModal = () => {\n        setModalImage(null);\n        setActiveImageId(null);\n        navigate('', { replace: true });\n    };\n\n     const handleCommentSubmit = async (e) => {\n            e.preventDefault();\n            const token = localStorage.getItem('token');\n            if (!token) return;\n        \n            try {\n                const decoded = jwtDecode(token);\n                const userId = decoded.userId;\n        \n                // Post the new comment\n                const response = await fetch('http://localhost:3000/add_comment', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}`,\n                    },\n                    body: JSON.stringify({ userId, imageId: activeImageId, comment: commentInput }),\n                });\n        \n                if (response.ok) {\n                    // After adding the comment, fetch all comments again\n                    const commentsResponse = await fetch(`http://localhost:3000/fetch_comments?id=${activeImageId}`, {\n                        headers: {\n                            Authorization: `Bearer ${token}`,\n                        },\n                    });\n        \n                    if (commentsResponse.ok) {\n                        const commentsData = await commentsResponse.json();\n                        // Update comments state with the latest comments\n                        setComments((prev) => ({\n                            ...prev,\n                            [activeImageId]: commentsData.comments, // Use the fetched comments\n                        }));\n                        setCommentInput(''); // Clear the comment input\n                    } else {\n                        console.error('Error fetching comments:', await commentsResponse.json());\n                    }\n                } else {\n                    console.error('Error adding comment:', await response.json());\n                }\n            } catch (error) {\n                console.error('Error adding comment:', error);\n            }\n        };\n\n        const handleDeleteImage = async (imageId) => {\n            try {\n                const token = localStorage.getItem('token');\n                const response = await fetch(`http://localhost:3000/images/${imageId}`, {\n                    method: 'DELETE',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Bearer ${token}`\n                    },\n                    credentials: 'include'\n                });\n        \n                if (!response.ok) {\n                    const error = await response.json();\n                    throw new Error(error.error || 'Failed to delete image');\n                }\n        \n                setImages(prev => prev.filter(img => img.id !== imageId));\n                closeModal();\n            } catch (error) {\n                console.error('Error deleting image:', error);\n                alert(error.message);\n            }\n        };\n\n        const fetchCommentLikeCount = async (commentId) => {\n            const token = localStorage.getItem('token');\n            try {\n                const response = await fetch(`http://localhost:3000/comment_likes/${commentId}`, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`\n                    }\n                });\n                if (!response.ok) throw new Error('Failed to fetch like count');\n                const data = await response.json();\n                setCommentLikes(prev => ({\n                    ...prev,\n                    [commentId]: data.count\n                }));\n            } catch (error) {\n                console.error('Error fetching comment like count:', error);\n            }\n        };\n\n        const handleLike = async (imageId) => {\n            const token = localStorage.getItem('token');\n            if (!token) return;\n        \n            const isLiked = userLikedImages.has(imageId);\n            \n            try {\n                const response = await fetch(`http://localhost:3000/likes/${imageId}`, {\n                    method: isLiked ? 'DELETE' : 'POST',\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json'\n                    }\n                });\n        \n                if (!response.ok) {\n                    throw new Error(`Failed to ${isLiked ? 'unlike' : 'like'} image`);\n                }\n        \n                const data = await response.json();\n                \n                // Update likes count\n                setLikes(prev => ({\n                    ...prev,\n                    [imageId]: data.count\n                }));\n        \n                // Toggle like status\n                setUserLikedImages(prev => {\n                    const newSet = new Set(prev);\n                    if (isLiked) {\n                        newSet.delete(imageId);\n                    } else {\n                        newSet.add(imageId);\n                    }\n                    return newSet;\n                });\n        \n            } catch (error) {\n                console.error('Error toggling like:', error);\n            }\n        };\n    \n    \n        const handleCommentLike = async (commentId) => {\n            const token = localStorage.getItem('token');\n            if (!token) return;\n        \n            const isLiked = userLikedComments.has(commentId);\n            try {\n                const response = await fetch(`http://localhost:3000/comment_likes/${commentId}`, {\n                    method: isLiked ? 'DELETE' : 'POST',\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Content-Type': 'application/json'\n                    }\n                });\n        \n                if (!response.ok) throw new Error('Failed to toggle like');\n        \n                setUserLikedComments(prev => {\n                    const newSet = new Set(prev);\n                    isLiked ? newSet.delete(commentId) : newSet.add(commentId);\n                    return newSet;\n                });\n        \n                // Fetch updated like count\n                await fetchCommentLikeCount(commentId);\n            } catch (error) {\n                console.error('Error toggling comment like:', error);\n            }\n        };\n\n    return (\n        <div className=\"gallery-modal\">\n            <div className=\"gallery-modal-content\">\n                <div className=\"gallery-modal-main\">\n                    <div className=\"gallery-modal-image-container\">\n                        <button className=\"gallery-close-button\" onClick={closeModal}>×</button>\n                        <button className=\"gallery-nav-button gallery-prev\" onClick={() => navigateImage(-1)}>\n                            <span>‹</span>\n                        </button>\n                        <img className=\"gallery-modal-image\" src={modalImage} alt=\"Enlarged\" />\n                        {isAdmin && (\n                            <div className=\"gallery-delete-section\">\n                                <button \n                                    className=\"gallery-delete-button\" \n                                    onClick={() => handleDeleteImage(activeImageId)}\n                                >\n                                    Delete Image\n                                </button>\n                            </div>\n                        )}\n                        <button className=\"gallery-nav-button gallery-next\" onClick={() => navigateImage(1)}>\n                            <span>›</span>\n                        </button>\n                    </div>\n                    <div className=\"gallery-modal-info\">\n                        <div className=\"gallery-user-info\">\n                            <img \n                                src={imageUserDetails[activeImageId]?.profile_picture || '/default-avatar.png'}\n                                alt=\"Profile\"\n                                className=\"gallery-user-avatar\"\n                                onClick={() => handleUsernameClick(imageUserDetails[activeImageId]?.user_id)}\n                            />\n                            <div className=\"gallery-user-details\">\n                                <h4 onClick={() => handleUsernameClick(imageUserDetails[activeImageId]?.user_id)}>\n                                    {imageUserDetails[activeImageId]?.username}\n                                </h4>\n                                <span className=\"gallery-creation-date\">\n                                    {formatDate(images.find(img => img.id === activeImageId)?.created_at)}\n                                </span>\n                            </div>\n                            <button className=\"gallery-follow-button\">Follow</button>\n                        </div>\n                        <div className=\"gallery-modal-title\">\n                            {images.find(img => img.id === activeImageId)?.prompt}\n                        </div>\n                        <div className=\"gallery-interaction-buttons\">\n                            <button onClick={() => handleLike(activeImageId)} className=\"gallery-action-btn\">\n                                <LikeIcon className={userLikedImages.has(activeImageId) ? 'liked' : ''} />\n                                <span>{likes[activeImageId] || 0}</span>\n                            </button>\n                            <button className=\"gallery-action-btn\">\n                                <CommentIcon />\n                                <span>{comments[activeImageId]?.length || 0}</span>\n                            </button>\n                            <button className=\"gallery-action-btn\">\n                                <ShareIcon />\n                            </button>\n                            <button className=\"gallery-action-btn\">\n                                <BookmarkIcon />\n                            </button>\n                        </div>\n                        <div className=\"gallery-comments-section\">\n                            <h4 className=\"gallery-comments-heading\">Comments</h4>\n                            <ul className=\"gallery-comments-list\">\n                                {(comments[activeImageId] || []).map((comment) => (\n                                    <li key={`comment-${comment.id}-${comment.created_at}`} className=\"gallery-comment-item\">\n                                        <div className=\"gallery-comment-avatar\">\n                                            <img \n                                                src={comment.profile_picture ? \n                                                    `http://localhost:3000/${comment.profile_picture}` : \n                                                    '/default-avatar.png'} \n                                                alt={comment.username}\n                                                onError={(e) => e.target.src = '/default-avatar.png'}\n                                            />\n                                        </div>\n                                        <div className=\"gallery-comment-content\">\n                                            <div className=\"gallery-comment-header\">\n                                                <span \n                                                    className=\"gallery-comment-username\"\n                                                    onClick={() => handleUsernameClick(comment.user_id)}\n                                                    role=\"button\"\n                                                    tabIndex={0}\n                                                >\n                                                    {comment.username}\n                                                </span>\n                                                <span className=\"gallery-comment-time\">\n                                                    {formatTimestamp(comment.created_at)}\n                                                </span>\n                                            </div>\n                                            <p className=\"gallery-comment-text\">{comment.comment}</p>\n                                            <div className=\"gallery-comment-actions\">\n                                                <button \n                                                    className=\"gallery-comment-like-btn\"\n                                                    onClick={() => handleCommentLike(comment.id)}\n                                                >\n                                                    ♥ {commentLikes[comment.id] || 0}\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </li>\n                                ))}\n                            </ul>\n                            <form onSubmit={handleCommentSubmit} className=\"gallery-comment-form\">\n                                <input\n                                    className=\"gallery-comment-input\"\n                                    type=\"text\"\n                                    value={commentInput}\n                                    onChange={(e) => setCommentInput(e.target.value)}\n                                    placeholder=\"Add a comment...\"\n                                    required\n                                />\n                                <button type=\"submit\" className=\"gallery-comment-submit\">Post</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default GalleryModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
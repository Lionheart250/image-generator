{"ast":null,"code":"var _jsxFileName = \"/Users/jack/image-generator/client/src/components/GalleryModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode'; // Ensure jwt-decode is installed\nimport { ReactComponent as LikeIcon } from '../assets/icons/like.svg';\nimport { ReactComponent as CommentIcon } from '../assets/icons/comment.svg';\nimport { ReactComponent as ShareIcon } from '../assets/icons/share.svg';\nimport { ReactComponent as BookmarkIcon } from '../assets/icons/bookmark.svg';\nimport './GalleryModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GalleryModal = ({\n  modalImage,\n  activeImageId,\n  images,\n  // Added images prop\n  isAdmin,\n  imageUserDetails,\n  onClose,\n  onNavigate,\n  onDelete,\n  onUsernameClick,\n  formatDate,\n  formatTimestamp\n}) => {\n  _s();\n  var _imageUserDetails$act, _imageUserDetails$act4, _images$find, _images$find2, _comments$activeImage;\n  // Local state moved from Gallery\n  const [commentInput, setCommentInput] = useState('');\n  const [likes, setLikes] = useState({});\n  const [comments, setComments] = useState({});\n  const [commentLikes, setCommentLikes] = useState({});\n  const [userLikedImages, setUserLikedImages] = useState(new Set());\n  const [userLikedComments, setUserLikedComments] = useState(new Set());\n  const [isPromptExpanded, setIsPromptExpanded] = useState(false);\n  const closeModal = () => {\n    onClose();\n  };\n\n  // Fetch comments and likes when activeImageId changes\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token || !activeImageId) return;\n    const fetchCommentsAndLikes = async () => {\n      try {\n        // Fetch comments for the active image\n        const commentsResponse = await fetch(`http://localhost:3000/fetch_comments?id=${activeImageId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (commentsResponse.ok) {\n          const data = await commentsResponse.json();\n          setComments(prev => ({\n            ...prev,\n            [activeImageId]: data.comments\n          }));\n        } else {\n          console.error('Error fetching comments');\n        }\n\n        // Fetch like count for the active image\n        const likesResponse = await fetch(`http://localhost:3000/likes/${activeImageId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (likesResponse.ok) {\n          const data = await likesResponse.json();\n          setLikes(prev => ({\n            ...prev,\n            [activeImageId]: data.count\n          }));\n        } else {\n          console.error('Error fetching likes');\n        }\n      } catch (error) {\n        console.error('Error fetching comments and likes:', error);\n      }\n    };\n    fetchCommentsAndLikes();\n  }, [activeImageId]);\n\n  // Handle adding a comment\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    try {\n      const decoded = jwtDecode(token);\n      const userId = decoded.userId;\n      const response = await fetch('http://localhost:3000/add_comment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          userId,\n          imageId: activeImageId,\n          comment: commentInput\n        })\n      });\n      if (response.ok) {\n        // Refresh comments after successful post\n        const commentsResponse = await fetch(`http://localhost:3000/fetch_comments?id=${activeImageId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (commentsResponse.ok) {\n          const data = await commentsResponse.json();\n          setComments(prev => ({\n            ...prev,\n            [activeImageId]: data.comments\n          }));\n        } else {\n          console.error('Error fetching comments');\n        }\n      } else {\n        console.error('Error adding comment:', await response.json());\n      }\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n    setCommentInput('');\n  };\n\n  // Fetch updated like count for a comment\n  const fetchCommentLikeCount = async commentId => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch(`http://localhost:3000/comment_likes/${commentId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch like count');\n      const data = await response.json();\n      setCommentLikes(prev => ({\n        ...prev,\n        [commentId]: data.count\n      }));\n    } catch (error) {\n      console.error('Error fetching comment like count:', error);\n    }\n  };\n\n  // Toggle image like\n  const handleLike = async imageId => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    const isLiked = userLikedImages.has(imageId);\n    try {\n      const response = await fetch(`http://localhost:3000/likes/${imageId}`, {\n        method: isLiked ? 'DELETE' : 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to ${isLiked ? 'unlike' : 'like'} image`);\n      }\n      const data = await response.json();\n      setLikes(prev => ({\n        ...prev,\n        [imageId]: data.count\n      }));\n      setUserLikedImages(prev => {\n        const newSet = new Set(prev);\n        isLiked ? newSet.delete(imageId) : newSet.add(imageId);\n        return newSet;\n      });\n    } catch (error) {\n      console.error('Error toggling like:', error);\n    }\n  };\n\n  // Toggle comment like\n  const handleCommentLike = async commentId => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    const isLiked = userLikedComments.has(commentId);\n    try {\n      const response = await fetch(`http://localhost:3000/comment_likes/${commentId}`, {\n        method: isLiked ? 'DELETE' : 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to toggle comment like');\n      }\n      setUserLikedComments(prev => {\n        const newSet = new Set(prev);\n        isLiked ? newSet.delete(commentId) : newSet.add(commentId);\n        return newSet;\n      });\n      await fetchCommentLikeCount(commentId);\n    } catch (error) {\n      console.error('Error toggling comment like:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-modal-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-modal-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gallery-modal-image-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"gallery-close-button\",\n            onClick: closeModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"gallery-nav-button gallery-prev\",\n            onClick: () => onNavigate(-1),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2039\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"gallery-modal-image\",\n            src: modalImage,\n            alt: \"Enlarged\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-delete-section\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-delete-button\",\n              onClick: () => onDelete(activeImageId),\n              children: \"Delete Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"gallery-nav-button gallery-next\",\n            onClick: () => onNavigate(1),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u203A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gallery-modal-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: ((_imageUserDetails$act = imageUserDetails[activeImageId]) === null || _imageUserDetails$act === void 0 ? void 0 : _imageUserDetails$act.profile_picture) || '/default-avatar.png',\n              alt: \"Profile\",\n              className: \"gallery-user-avatar\",\n              onClick: () => {\n                var _imageUserDetails$act2;\n                return onUsernameClick((_imageUserDetails$act2 = imageUserDetails[activeImageId]) === null || _imageUserDetails$act2 === void 0 ? void 0 : _imageUserDetails$act2.user_id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gallery-user-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                onClick: () => {\n                  var _imageUserDetails$act3;\n                  return onUsernameClick((_imageUserDetails$act3 = imageUserDetails[activeImageId]) === null || _imageUserDetails$act3 === void 0 ? void 0 : _imageUserDetails$act3.user_id);\n                },\n                children: (_imageUserDetails$act4 = imageUserDetails[activeImageId]) === null || _imageUserDetails$act4 === void 0 ? void 0 : _imageUserDetails$act4.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gallery-creation-date\",\n                children: formatDate((_images$find = images.find(img => img.id === activeImageId)) === null || _images$find === void 0 ? void 0 : _images$find.created_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-follow-button\",\n              children: \"Follow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-modal-title\",\n            children: (_images$find2 = images.find(img => img.id === activeImageId)) === null || _images$find2 === void 0 ? void 0 : _images$find2.prompt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-interaction-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLike(activeImageId),\n              className: \"gallery-action-btn\",\n              children: [/*#__PURE__*/_jsxDEV(LikeIcon, {\n                className: userLikedImages.has(activeImageId) ? 'liked' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: likes[activeImageId] || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-action-btn\",\n              children: [/*#__PURE__*/_jsxDEV(CommentIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: ((_comments$activeImage = comments[activeImageId]) === null || _comments$activeImage === void 0 ? void 0 : _comments$activeImage.length) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-action-btn\",\n              children: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-action-btn\",\n              children: /*#__PURE__*/_jsxDEV(BookmarkIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-comments-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"gallery-comments-heading\",\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"gallery-comments-list\",\n              children: (comments[activeImageId] || []).map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"gallery-comment-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"gallery-comment-avatar\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: comment.profile_picture ? `http://localhost:3000/${comment.profile_picture}` : '/default-avatar.png',\n                    alt: comment.username,\n                    onError: e => e.target.src = '/default-avatar.png'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"gallery-comment-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"gallery-comment-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"gallery-comment-username\",\n                      onClick: () => onUsernameClick(comment.user_id),\n                      role: \"button\",\n                      tabIndex: 0,\n                      children: comment.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"gallery-comment-time\",\n                      children: formatTimestamp(comment.created_at)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"gallery-comment-text\",\n                    children: comment.comment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"gallery-comment-actions\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"gallery-comment-like-btn\",\n                      onClick: () => handleCommentLike(comment.id),\n                      children: [\"\\u2665 \", commentLikes[comment.id] || 0]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 41\n                }, this)]\n              }, `comment-${comment.id}-${comment.created_at}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleCommentSubmit,\n              className: \"gallery-comment-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"gallery-comment-input\",\n                type: \"text\",\n                value: commentInput,\n                onChange: e => setCommentInput(e.target.value),\n                placeholder: \"Add a comment...\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"gallery-comment-submit\",\n                children: \"Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n};\n_s(GalleryModal, \"fgqXwlZvDRRN9kbO5jP4JVj7iHc=\");\n_c = GalleryModal;\nexport default GalleryModal;\nvar _c;\n$RefreshReg$(_c, \"GalleryModal\");","map":{"version":3,"names":["React","useState","useEffect","jwtDecode","ReactComponent","LikeIcon","CommentIcon","ShareIcon","BookmarkIcon","jsxDEV","_jsxDEV","GalleryModal","modalImage","activeImageId","images","isAdmin","imageUserDetails","onClose","onNavigate","onDelete","onUsernameClick","formatDate","formatTimestamp","_s","_imageUserDetails$act","_imageUserDetails$act4","_images$find","_images$find2","_comments$activeImage","commentInput","setCommentInput","likes","setLikes","comments","setComments","commentLikes","setCommentLikes","userLikedImages","setUserLikedImages","Set","userLikedComments","setUserLikedComments","isPromptExpanded","setIsPromptExpanded","closeModal","token","localStorage","getItem","fetchCommentsAndLikes","commentsResponse","fetch","headers","Authorization","ok","data","json","prev","console","error","likesResponse","count","handleCommentSubmit","e","preventDefault","decoded","userId","response","method","body","JSON","stringify","imageId","comment","fetchCommentLikeCount","commentId","Error","handleLike","isLiked","has","newSet","delete","add","handleCommentLike","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","profile_picture","_imageUserDetails$act2","user_id","_imageUserDetails$act3","username","find","img","id","created_at","prompt","length","map","onError","target","role","tabIndex","onSubmit","type","value","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/jack/image-generator/client/src/components/GalleryModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode'; // Ensure jwt-decode is installed\nimport { ReactComponent as LikeIcon } from '../assets/icons/like.svg';\nimport { ReactComponent as CommentIcon } from '../assets/icons/comment.svg';\nimport { ReactComponent as ShareIcon } from '../assets/icons/share.svg';\nimport { ReactComponent as BookmarkIcon } from '../assets/icons/bookmark.svg';\nimport './GalleryModal.css';\n\nconst GalleryModal = ({ \n    modalImage,\n    activeImageId,\n    images, // Added images prop\n    isAdmin,\n    imageUserDetails,\n    onClose,\n    onNavigate,\n    onDelete,\n    onUsernameClick,\n    formatDate,\n    formatTimestamp,\n}) => {\n    // Local state moved from Gallery\n    const [commentInput, setCommentInput] = useState('');\n    const [likes, setLikes] = useState({});\n    const [comments, setComments] = useState({});\n    const [commentLikes, setCommentLikes] = useState({});\n    const [userLikedImages, setUserLikedImages] = useState(new Set());\n    const [userLikedComments, setUserLikedComments] = useState(new Set());\n    const [isPromptExpanded, setIsPromptExpanded] = useState(false);\n\n    const closeModal = () => { onClose(); };\n\n    // Fetch comments and likes when activeImageId changes\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (!token || !activeImageId) return;\n    \n        const fetchCommentsAndLikes = async () => {\n            try {\n                // Fetch comments for the active image\n                const commentsResponse = await fetch(`http://localhost:3000/fetch_comments?id=${activeImageId}`, {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                if (commentsResponse.ok) {\n                    const data = await commentsResponse.json();\n                    setComments(prev => ({\n                        ...prev,\n                        [activeImageId]: data.comments\n                    }));\n                } else {\n                    console.error('Error fetching comments');\n                }\n                \n                // Fetch like count for the active image\n                const likesResponse = await fetch(`http://localhost:3000/likes/${activeImageId}`, {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                if (likesResponse.ok) {\n                    const data = await likesResponse.json();\n                    setLikes(prev => ({\n                        ...prev,\n                        [activeImageId]: data.count\n                    }));\n                } else {\n                    console.error('Error fetching likes');\n                }\n            } catch (error) {\n                console.error('Error fetching comments and likes:', error);\n            }\n        };\n    \n        fetchCommentsAndLikes();\n    }, [activeImageId]);\n\n    // Handle adding a comment\n    const handleCommentSubmit = async (e) => {\n        e.preventDefault();\n        const token = localStorage.getItem('token');\n        if (!token) return;\n        try {\n            const decoded = jwtDecode(token);\n            const userId = decoded.userId;\n            const response = await fetch('http://localhost:3000/add_comment', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify({ userId, imageId: activeImageId, comment: commentInput }),\n            });\n            if (response.ok) {\n                // Refresh comments after successful post\n                const commentsResponse = await fetch(`http://localhost:3000/fetch_comments?id=${activeImageId}`, {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                if (commentsResponse.ok) {\n                    const data = await commentsResponse.json();\n                    setComments(prev => ({\n                        ...prev,\n                        [activeImageId]: data.comments\n                    }));\n                } else {\n                    console.error('Error fetching comments');\n                }\n            } else {\n                console.error('Error adding comment:', await response.json());\n            }\n        } catch (error) {\n            console.error('Error adding comment:', error);\n        }\n        setCommentInput('');\n    };\n\n    // Fetch updated like count for a comment\n    const fetchCommentLikeCount = async (commentId) => {\n        const token = localStorage.getItem('token');\n        try {\n            const response = await fetch(`http://localhost:3000/comment_likes/${commentId}`, {\n                headers: { 'Authorization': `Bearer ${token}` }\n            });\n            if (!response.ok) throw new Error('Failed to fetch like count');\n            const data = await response.json();\n            setCommentLikes(prev => ({\n                ...prev,\n                [commentId]: data.count\n            }));\n        } catch (error) {\n            console.error('Error fetching comment like count:', error);\n        }\n    };\n\n    // Toggle image like\n    const handleLike = async (imageId) => {\n        const token = localStorage.getItem('token');\n        if (!token) return;\n        const isLiked = userLikedImages.has(imageId);\n        try {\n            const response = await fetch(`http://localhost:3000/likes/${imageId}`, {\n                method: isLiked ? 'DELETE' : 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                }\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to ${isLiked ? 'unlike' : 'like'} image`);\n            }\n            const data = await response.json();\n            setLikes(prev => ({\n                ...prev,\n                [imageId]: data.count\n            }));\n            setUserLikedImages(prev => {\n                const newSet = new Set(prev);\n                isLiked ? newSet.delete(imageId) : newSet.add(imageId);\n                return newSet;\n            });\n        } catch (error) {\n            console.error('Error toggling like:', error);\n        }\n    };\n\n    // Toggle comment like\n    const handleCommentLike = async (commentId) => {\n        const token = localStorage.getItem('token');\n        if (!token) return;\n        const isLiked = userLikedComments.has(commentId);\n        try {\n            const response = await fetch(`http://localhost:3000/comment_likes/${commentId}`, {\n                method: isLiked ? 'DELETE' : 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                }\n            });\n            if (!response.ok) {\n                throw new Error('Failed to toggle comment like');\n            }\n            setUserLikedComments(prev => {\n                const newSet = new Set(prev);\n                isLiked ? newSet.delete(commentId) : newSet.add(commentId);\n                return newSet;\n            });\n            await fetchCommentLikeCount(commentId);\n        } catch (error) {\n            console.error('Error toggling comment like:', error);\n        }\n    };\n\n    return (\n        <div className=\"gallery-modal\">\n            <div className=\"gallery-modal-content\">\n                <div className=\"gallery-modal-main\">\n                    <div className=\"gallery-modal-image-container\">\n                        <button className=\"gallery-close-button\" onClick={closeModal}>×</button>\n                        <button className=\"gallery-nav-button gallery-prev\" onClick={() => onNavigate(-1)}>\n                            <span>‹</span>\n                        </button>\n                        <img className=\"gallery-modal-image\" src={modalImage} alt=\"Enlarged\" />\n                        {isAdmin && (\n                            <div className=\"gallery-delete-section\">\n                                <button \n                                    className=\"gallery-delete-button\" \n                                    onClick={() => onDelete(activeImageId)}\n                                >\n                                    Delete Image\n                                </button>\n                            </div>\n                        )}\n                        <button className=\"gallery-nav-button gallery-next\" onClick={() => onNavigate(1)}>\n                            <span>›</span>\n                        </button>\n                    </div>\n                    <div className=\"gallery-modal-info\">\n                        <div className=\"gallery-user-info\">\n                            <img \n                                src={imageUserDetails[activeImageId]?.profile_picture || '/default-avatar.png'}\n                                alt=\"Profile\"\n                                className=\"gallery-user-avatar\"\n                                onClick={() => onUsernameClick(imageUserDetails[activeImageId]?.user_id)}\n                            />\n                            <div className=\"gallery-user-details\">\n                                <h4 onClick={() => onUsernameClick(imageUserDetails[activeImageId]?.user_id)}>\n                                    {imageUserDetails[activeImageId]?.username}\n                                </h4>\n                                <span className=\"gallery-creation-date\">\n                                    {formatDate(images.find(img => img.id === activeImageId)?.created_at)}\n                                </span>\n                            </div>\n                            <button className=\"gallery-follow-button\">Follow</button>\n                        </div>\n                        <div className=\"gallery-modal-title\">\n                            {images.find(img => img.id === activeImageId)?.prompt}\n                        </div>\n                        <div className=\"gallery-interaction-buttons\">\n                            <button onClick={() => handleLike(activeImageId)} className=\"gallery-action-btn\">\n                                <LikeIcon className={userLikedImages.has(activeImageId) ? 'liked' : ''} />\n                                <span>{likes[activeImageId] || 0}</span>\n                            </button>\n                            <button className=\"gallery-action-btn\">\n                                <CommentIcon />\n                                <span>{comments[activeImageId]?.length || 0}</span>\n                            </button>\n                            <button className=\"gallery-action-btn\">\n                                <ShareIcon />\n                            </button>\n                            <button className=\"gallery-action-btn\">\n                                <BookmarkIcon />\n                            </button>\n                        </div>\n                        <div className=\"gallery-comments-section\">\n                            <h4 className=\"gallery-comments-heading\">Comments</h4>\n                            <ul className=\"gallery-comments-list\">\n                                {(comments[activeImageId] || []).map((comment) => (\n                                    <li key={`comment-${comment.id}-${comment.created_at}`} className=\"gallery-comment-item\">\n                                        <div className=\"gallery-comment-avatar\">\n                                            <img \n                                                src={comment.profile_picture ? \n                                                    `http://localhost:3000/${comment.profile_picture}` : \n                                                    '/default-avatar.png'} \n                                                alt={comment.username}\n                                                onError={(e) => e.target.src = '/default-avatar.png'}\n                                            />\n                                        </div>\n                                        <div className=\"gallery-comment-content\">\n                                            <div className=\"gallery-comment-header\">\n                                                <span \n                                                    className=\"gallery-comment-username\"\n                                                    onClick={() => onUsernameClick(comment.user_id)}\n                                                    role=\"button\"\n                                                    tabIndex={0}\n                                                >\n                                                    {comment.username}\n                                                </span>\n                                                <span className=\"gallery-comment-time\">\n                                                    {formatTimestamp(comment.created_at)}\n                                                </span>\n                                            </div>\n                                            <p className=\"gallery-comment-text\">{comment.comment}</p>\n                                            <div className=\"gallery-comment-actions\">\n                                                <button \n                                                    className=\"gallery-comment-like-btn\"\n                                                    onClick={() => handleCommentLike(comment.id)}\n                                                >\n                                                    ♥ {commentLikes[comment.id] || 0}\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </li>\n                                ))}\n                            </ul>\n                            <form onSubmit={handleCommentSubmit} className=\"gallery-comment-form\">\n                                <input\n                                    className=\"gallery-comment-input\"\n                                    type=\"text\"\n                                    value={commentInput}\n                                    onChange={(e) => setCommentInput(e.target.value)}\n                                    placeholder=\"Add a comment...\"\n                                    required\n                                />\n                                <button type=\"submit\" className=\"gallery-comment-submit\">Post</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default GalleryModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/jack/image-generator/client/src/components/GalleryModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jwtDecode } from 'jwt-decode'; // Ensure jwt-decode is installed\nimport { ReactComponent as LikeIcon } from '../assets/icons/like.svg';\nimport { ReactComponent as CommentIcon } from '../assets/icons/comment.svg';\nimport { ReactComponent as ShareIcon } from '../assets/icons/share.svg';\nimport { ReactComponent as BookmarkIcon } from '../assets/icons/bookmark.svg';\nimport './GalleryModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GalleryModal = ({\n  modalImage,\n  activeImageId,\n  isAdmin,\n  imageUserDetails,\n  images,\n  comments,\n  likes,\n  userLikedImages,\n  commentLikes,\n  commentInput,\n  onClose,\n  onNavigate,\n  onDelete,\n  onLike,\n  onCommentLike,\n  onCommentSubmit,\n  onUsernameClick,\n  formatDate,\n  formatTimestamp,\n  setCommentInput\n}) => {\n  _s();\n  var _imageUserDetails$act, _imageUserDetails$act4, _images$find, _images$find2, _comments$activeImage;\n  const [isPromptExpanded, setIsPromptExpanded] = useState(false);\n\n  // Close modal using parent's onClose handler\n  const closeModal = () => {\n    onClose();\n  };\n\n  // Handle adding a comment\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    try {\n      const decoded = jwtDecode(token);\n      const userId = decoded.userId;\n      const response = await fetch('http://localhost:3000/add_comment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          userId,\n          imageId: activeImageId,\n          comment: commentInput\n        })\n      });\n      if (response.ok) {\n        // After adding the comment, fetch updated comments\n        const commentsResponse = await fetch(`http://localhost:3000/fetch_comments?id=${activeImageId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (commentsResponse.ok) {\n          const data = await commentsResponse.json();\n          setComments(prev => ({\n            ...prev,\n            [activeImageId]: data.comments\n          }));\n        } else {\n          console.error('Error fetching comments');\n        }\n      } else {\n        console.error('Error adding comment:', await response.json());\n      }\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n    setCommentInput('');\n  };\n\n  // Fetch updated like count for a comment\n  const fetchCommentLikeCount = async commentId => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch(`http://localhost:3000/comment_likes/${commentId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch like count');\n      const data = await response.json();\n      setCommentLikes(prev => ({\n        ...prev,\n        [commentId]: data.count\n      }));\n    } catch (error) {\n      console.error('Error fetching comment like count:', error);\n    }\n  };\n\n  // Toggle image like\n  const handleLike = async imageId => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    const isLiked = userLikedImages.has(imageId);\n    try {\n      const response = await fetch(`http://localhost:3000/likes/${imageId}`, {\n        method: isLiked ? 'DELETE' : 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to ${isLiked ? 'unlike' : 'like'} image`);\n      }\n      const data = await response.json();\n\n      // Update likes count and toggle like state locally\n      setLikes(prev => ({\n        ...prev,\n        [imageId]: data.count\n      }));\n      setUserLikedImages(prev => {\n        const newSet = new Set(prev);\n        isLiked ? newSet.delete(imageId) : newSet.add(imageId);\n        return newSet;\n      });\n    } catch (error) {\n      console.error('Error toggling like:', error);\n    }\n  };\n\n  // Toggle comment like\n  const handleCommentLike = async commentId => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    const isLiked = userLikedComments.has(commentId);\n    try {\n      const response = await fetch(`http://localhost:3000/comment_likes/${commentId}`, {\n        method: isLiked ? 'DELETE' : 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to toggle comment like');\n      }\n      setUserLikedComments(prev => {\n        const newSet = new Set(prev);\n        isLiked ? newSet.delete(commentId) : newSet.add(commentId);\n        return newSet;\n      });\n\n      // Refresh the like count for the comment\n      await fetchCommentLikeCount(commentId);\n    } catch (error) {\n      console.error('Error toggling comment like:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-modal-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-modal-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gallery-modal-image-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"gallery-close-button\",\n            onClick: closeModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"gallery-nav-button gallery-prev\",\n            onClick: () => onNavigate(-1),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2039\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"gallery-modal-image\",\n            src: modalImage,\n            alt: \"Enlarged\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-delete-section\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-delete-button\",\n              onClick: () => onDelete(activeImageId),\n              children: \"Delete Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"gallery-nav-button gallery-next\",\n            onClick: () => onNavigate(1),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u203A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gallery-modal-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: ((_imageUserDetails$act = imageUserDetails[activeImageId]) === null || _imageUserDetails$act === void 0 ? void 0 : _imageUserDetails$act.profile_picture) || '/default-avatar.png',\n              alt: \"Profile\",\n              className: \"gallery-user-avatar\",\n              onClick: () => {\n                var _imageUserDetails$act2;\n                return onUsernameClick((_imageUserDetails$act2 = imageUserDetails[activeImageId]) === null || _imageUserDetails$act2 === void 0 ? void 0 : _imageUserDetails$act2.user_id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gallery-user-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                onClick: () => {\n                  var _imageUserDetails$act3;\n                  return onUsernameClick((_imageUserDetails$act3 = imageUserDetails[activeImageId]) === null || _imageUserDetails$act3 === void 0 ? void 0 : _imageUserDetails$act3.user_id);\n                },\n                children: (_imageUserDetails$act4 = imageUserDetails[activeImageId]) === null || _imageUserDetails$act4 === void 0 ? void 0 : _imageUserDetails$act4.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gallery-creation-date\",\n                children: formatDate((_images$find = images.find(img => img.id === activeImageId)) === null || _images$find === void 0 ? void 0 : _images$find.created_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-follow-button\",\n              children: \"Follow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-modal-title\",\n            children: (_images$find2 = images.find(img => img.id === activeImageId)) === null || _images$find2 === void 0 ? void 0 : _images$find2.prompt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-interaction-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLike(activeImageId),\n              className: \"gallery-action-btn\",\n              children: [/*#__PURE__*/_jsxDEV(LikeIcon, {\n                className: userLikedImages.has(activeImageId) ? 'liked' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: likes[activeImageId] || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-action-btn\",\n              children: [/*#__PURE__*/_jsxDEV(CommentIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: ((_comments$activeImage = comments[activeImageId]) === null || _comments$activeImage === void 0 ? void 0 : _comments$activeImage.length) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-action-btn\",\n              children: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-action-btn\",\n              children: /*#__PURE__*/_jsxDEV(BookmarkIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-comments-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"gallery-comments-heading\",\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"gallery-comments-list\",\n              children: (comments[activeImageId] || []).map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"gallery-comment-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"gallery-comment-avatar\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: comment.profile_picture ? `http://localhost:3000/${comment.profile_picture}` : '/default-avatar.png',\n                    alt: comment.username,\n                    onError: e => e.target.src = '/default-avatar.png'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"gallery-comment-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"gallery-comment-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"gallery-comment-username\",\n                      onClick: () => onUsernameClick(comment.user_id),\n                      role: \"button\",\n                      tabIndex: 0,\n                      children: comment.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"gallery-comment-time\",\n                      children: formatTimestamp(comment.created_at)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"gallery-comment-text\",\n                    children: comment.comment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"gallery-comment-actions\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"gallery-comment-like-btn\",\n                      onClick: () => handleCommentLike(comment.id),\n                      children: [\"\\u2665 \", commentLikes[comment.id] || 0]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 41\n                }, this)]\n              }, `comment-${comment.id}-${comment.created_at}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleCommentSubmit,\n              className: \"gallery-comment-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"gallery-comment-input\",\n                type: \"text\",\n                value: commentInput,\n                onChange: e => setCommentInput(e.target.value),\n                placeholder: \"Add a comment...\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"gallery-comment-submit\",\n                children: \"Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n};\n_s(GalleryModal, \"38GV4fAPBjdkl8dZhiMOnA60fMs=\");\n_c = GalleryModal;\nexport default GalleryModal;\nvar _c;\n$RefreshReg$(_c, \"GalleryModal\");","map":{"version":3,"names":["React","useState","jwtDecode","ReactComponent","LikeIcon","CommentIcon","ShareIcon","BookmarkIcon","jsxDEV","_jsxDEV","GalleryModal","modalImage","activeImageId","isAdmin","imageUserDetails","images","comments","likes","userLikedImages","commentLikes","commentInput","onClose","onNavigate","onDelete","onLike","onCommentLike","onCommentSubmit","onUsernameClick","formatDate","formatTimestamp","setCommentInput","_s","_imageUserDetails$act","_imageUserDetails$act4","_images$find","_images$find2","_comments$activeImage","isPromptExpanded","setIsPromptExpanded","closeModal","handleCommentSubmit","e","preventDefault","token","localStorage","getItem","decoded","userId","response","fetch","method","headers","Authorization","body","JSON","stringify","imageId","comment","ok","commentsResponse","data","json","setComments","prev","console","error","fetchCommentLikeCount","commentId","Error","setCommentLikes","count","handleLike","isLiked","has","setLikes","setUserLikedImages","newSet","Set","delete","add","handleCommentLike","userLikedComments","setUserLikedComments","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","profile_picture","_imageUserDetails$act2","user_id","_imageUserDetails$act3","username","find","img","id","created_at","prompt","length","map","onError","target","role","tabIndex","onSubmit","type","value","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/jack/image-generator/client/src/components/GalleryModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { jwtDecode } from 'jwt-decode'; // Ensure jwt-decode is installed\nimport { ReactComponent as LikeIcon } from '../assets/icons/like.svg';\nimport { ReactComponent as CommentIcon } from '../assets/icons/comment.svg';\nimport { ReactComponent as ShareIcon } from '../assets/icons/share.svg';\nimport { ReactComponent as BookmarkIcon } from '../assets/icons/bookmark.svg';\nimport './GalleryModal.css';\n\nconst GalleryModal = ({ \n    modalImage,\n    activeImageId,\n    isAdmin,\n    imageUserDetails,\n    images,\n    comments,\n    likes,\n    userLikedImages,\n    commentLikes,\n    commentInput,\n    onClose,\n    onNavigate,\n    onDelete,\n    onLike,\n    onCommentLike,\n    onCommentSubmit,\n    onUsernameClick,\n    formatDate,\n    formatTimestamp,\n    setCommentInput\n}) => {\n    const [isPromptExpanded, setIsPromptExpanded] = useState(false);\n\n    // Close modal using parent's onClose handler\n    const closeModal = () => {\n        onClose();\n    };\n\n    // Handle adding a comment\n    const handleCommentSubmit = async (e) => {\n        e.preventDefault();\n        const token = localStorage.getItem('token');\n        if (!token) return;\n\n        try {\n            const decoded = jwtDecode(token);\n            const userId = decoded.userId;\n\n            const response = await fetch('http://localhost:3000/add_comment', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify({ userId, imageId: activeImageId, comment: commentInput }),\n            });\n\n            if (response.ok) {\n                // After adding the comment, fetch updated comments\n                const commentsResponse = await fetch(`http://localhost:3000/fetch_comments?id=${activeImageId}`, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n\n                if (commentsResponse.ok) {\n                    const data = await commentsResponse.json();\n                    setComments(prev => ({\n                        ...prev,\n                        [activeImageId]: data.comments\n                    }));\n                } else {\n                    console.error('Error fetching comments');\n                }\n            } else {\n                console.error('Error adding comment:', await response.json());\n            }\n        } catch (error) {\n            console.error('Error adding comment:', error);\n        }\n        setCommentInput('');\n    };\n\n    // Fetch updated like count for a comment\n    const fetchCommentLikeCount = async (commentId) => {\n        const token = localStorage.getItem('token');\n        try {\n            const response = await fetch(`http://localhost:3000/comment_likes/${commentId}`, {\n                headers: { 'Authorization': `Bearer ${token}` }\n            });\n            if (!response.ok) throw new Error('Failed to fetch like count');\n            const data = await response.json();\n            setCommentLikes(prev => ({\n                ...prev,\n                [commentId]: data.count\n            }));\n        } catch (error) {\n            console.error('Error fetching comment like count:', error);\n        }\n    };\n\n    // Toggle image like\n    const handleLike = async (imageId) => {\n        const token = localStorage.getItem('token');\n        if (!token) return;\n\n        const isLiked = userLikedImages.has(imageId);\n        \n        try {\n            const response = await fetch(`http://localhost:3000/likes/${imageId}`, {\n                method: isLiked ? 'DELETE' : 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            if (!response.ok) {\n                throw new Error(`Failed to ${isLiked ? 'unlike' : 'like'} image`);\n            }\n\n            const data = await response.json();\n            \n            // Update likes count and toggle like state locally\n            setLikes(prev => ({\n                ...prev,\n                [imageId]: data.count\n            }));\n\n            setUserLikedImages(prev => {\n                const newSet = new Set(prev);\n                isLiked ? newSet.delete(imageId) : newSet.add(imageId);\n                return newSet;\n            });\n\n        } catch (error) {\n            console.error('Error toggling like:', error);\n        }\n    };\n\n    // Toggle comment like\n    const handleCommentLike = async (commentId) => {\n        const token = localStorage.getItem('token');\n        if (!token) return;\n\n        const isLiked = userLikedComments.has(commentId);\n        try {\n            const response = await fetch(`http://localhost:3000/comment_likes/${commentId}`, {\n                method: isLiked ? 'DELETE' : 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to toggle comment like');\n            }\n\n            setUserLikedComments(prev => {\n                const newSet = new Set(prev);\n                isLiked ? newSet.delete(commentId) : newSet.add(commentId);\n                return newSet;\n            });\n\n            // Refresh the like count for the comment\n            await fetchCommentLikeCount(commentId);\n        } catch (error) {\n            console.error('Error toggling comment like:', error);\n        }\n    };\n\n    return (\n        <div className=\"gallery-modal\">\n            <div className=\"gallery-modal-content\">\n                <div className=\"gallery-modal-main\">\n                    <div className=\"gallery-modal-image-container\">\n                        <button className=\"gallery-close-button\" onClick={closeModal}>×</button>\n                        <button className=\"gallery-nav-button gallery-prev\" onClick={() => onNavigate(-1)}>\n                            <span>‹</span>\n                        </button>\n                        <img className=\"gallery-modal-image\" src={modalImage} alt=\"Enlarged\" />\n                        {isAdmin && (\n                            <div className=\"gallery-delete-section\">\n                                <button \n                                    className=\"gallery-delete-button\" \n                                    onClick={() => onDelete(activeImageId)}\n                                >\n                                    Delete Image\n                                </button>\n                            </div>\n                        )}\n                        <button className=\"gallery-nav-button gallery-next\" onClick={() => onNavigate(1)}>\n                            <span>›</span>\n                        </button>\n                    </div>\n                    <div className=\"gallery-modal-info\">\n                        <div className=\"gallery-user-info\">\n                            <img \n                                src={imageUserDetails[activeImageId]?.profile_picture || '/default-avatar.png'}\n                                alt=\"Profile\"\n                                className=\"gallery-user-avatar\"\n                                onClick={() => onUsernameClick(imageUserDetails[activeImageId]?.user_id)}\n                            />\n                            <div className=\"gallery-user-details\">\n                                <h4 onClick={() => onUsernameClick(imageUserDetails[activeImageId]?.user_id)}>\n                                    {imageUserDetails[activeImageId]?.username}\n                                </h4>\n                                <span className=\"gallery-creation-date\">\n                                    {formatDate(images.find(img => img.id === activeImageId)?.created_at)}\n                                </span>\n                            </div>\n                            <button className=\"gallery-follow-button\">Follow</button>\n                        </div>\n                        <div className=\"gallery-modal-title\">\n                            {images.find(img => img.id === activeImageId)?.prompt}\n                        </div>\n                        <div className=\"gallery-interaction-buttons\">\n                            <button onClick={() => handleLike(activeImageId)} className=\"gallery-action-btn\">\n                                <LikeIcon className={userLikedImages.has(activeImageId) ? 'liked' : ''} />\n                                <span>{likes[activeImageId] || 0}</span>\n                            </button>\n                            <button className=\"gallery-action-btn\">\n                                <CommentIcon />\n                                <span>{comments[activeImageId]?.length || 0}</span>\n                            </button>\n                            <button className=\"gallery-action-btn\">\n                                <ShareIcon />\n                            </button>\n                            <button className=\"gallery-action-btn\">\n                                <BookmarkIcon />\n                            </button>\n                        </div>\n                        <div className=\"gallery-comments-section\">\n                            <h4 className=\"gallery-comments-heading\">Comments</h4>\n                            <ul className=\"gallery-comments-list\">\n                                {(comments[activeImageId] || []).map((comment) => (\n                                    <li key={`comment-${comment.id}-${comment.created_at}`} className=\"gallery-comment-item\">\n                                        <div className=\"gallery-comment-avatar\">\n                                            <img \n                                                src={comment.profile_picture ? \n                                                    `http://localhost:3000/${comment.profile_picture}` : \n                                                    '/default-avatar.png'} \n                                                alt={comment.username}\n                                                onError={(e) => e.target.src = '/default-avatar.png'}\n                                            />\n                                        </div>\n                                        <div className=\"gallery-comment-content\">\n                                            <div className=\"gallery-comment-header\">\n                                                <span \n                                                    className=\"gallery-comment-username\"\n                                                    onClick={() => onUsernameClick(comment.user_id)}\n                                                    role=\"button\"\n                                                    tabIndex={0}\n                                                >\n                                                    {comment.username}\n                                                </span>\n                                                <span className=\"gallery-comment-time\">\n                                                    {formatTimestamp(comment.created_at)}\n                                                </span>\n                                            </div>\n                                            <p className=\"gallery-comment-text\">{comment.comment}</p>\n                                            <div className=\"gallery-comment-actions\">\n                                                <button \n                                                    className=\"gallery-comment-like-btn\"\n                                                    onClick={() => handleCommentLike(comment.id)}\n                                                >\n                                                    ♥ {commentLikes[comment.id] || 0}\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </li>\n                                ))}\n                            </ul>\n                            <form onSubmit={handleCommentSubmit} className=\"gallery-comment-form\">\n                                <input\n                                    className=\"gallery-comment-input\"\n                                    type=\"text\"\n                                    value={commentInput}\n                                    onChange={(e) => setCommentInput(e.target.value)}\n                                    placeholder=\"Add a comment...\"\n                                    required\n                                />\n                                <button type=\"submit\" className=\"gallery-comment-submit\">Post</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default GalleryModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
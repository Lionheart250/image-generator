{"ast":null,"code":"var _jsxFileName = \"/Users/jack/image-generator/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem('refreshToken'));\n  const decodeAndSetUser = token => {\n    try {\n      const decodedToken = jwtDecode(token);\n      setUser({\n        id: decodedToken.userId,\n        username: decodedToken.username,\n        role: decodedToken.role\n      });\n    } catch (error) {\n      console.error('Failed to decode token:', error);\n      logout();\n    }\n  };\n  const isTokenExpired = token => {\n    try {\n      const {\n        exp\n      } = jwtDecode(token);\n      return Date.now() >= exp * 1000;\n    } catch {\n      return true;\n    }\n  };\n  const login = (newToken, newRefreshToken) => {\n    localStorage.setItem('token', newToken);\n    localStorage.setItem('refreshToken', newRefreshToken);\n    setToken(newToken);\n    setRefreshToken(newRefreshToken);\n    decodeAndSetUser(newToken);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n    setToken(null);\n    setRefreshToken(null);\n    setUser(null);\n  };\n  useEffect(() => {\n    const refreshAuthToken = async () => {\n      if (refreshToken && isTokenExpired(token)) {\n        try {\n          const response = await axios.post('http://localhost:3000/refresh', {\n            refreshToken\n          });\n          const {\n            token: newToken,\n            refreshToken: newRefreshToken\n          } = response.data;\n          login(newToken, newRefreshToken);\n        } catch (error) {\n          console.error('Failed to refresh token:', error);\n          logout();\n        }\n      } else if (token) {\n        decodeAndSetUser(token);\n      }\n    };\n    refreshAuthToken();\n  }, [token, refreshToken]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"ypUeRL5GeMfFLALKqga6Ffz9WbI=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jwtDecode","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","refreshToken","setRefreshToken","decodeAndSetUser","decodedToken","id","userId","username","role","error","console","logout","isTokenExpired","exp","Date","now","login","newToken","newRefreshToken","setItem","removeItem","refreshAuthToken","response","post","data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/jack/image-generator/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [token, setToken] = useState(localStorage.getItem('token'));\n    const [refreshToken, setRefreshToken] = useState(localStorage.getItem('refreshToken'));\n\n    const decodeAndSetUser = (token) => {\n        try {\n            const decodedToken = jwtDecode(token);\n            setUser({\n                id: decodedToken.userId,\n                username: decodedToken.username,\n                role: decodedToken.role,\n            });\n        } catch (error) {\n            console.error('Failed to decode token:', error);\n            logout();\n        }\n    };\n\n    const isTokenExpired = (token) => {\n        try {\n            const { exp } = jwtDecode(token);\n            return Date.now() >= exp * 1000;\n        } catch {\n            return true;\n        }\n    };\n\n    const login = (newToken, newRefreshToken) => {\n        localStorage.setItem('token', newToken);\n        localStorage.setItem('refreshToken', newRefreshToken);\n        setToken(newToken);\n        setRefreshToken(newRefreshToken);\n        decodeAndSetUser(newToken);\n    };\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('refreshToken');\n        setToken(null);\n        setRefreshToken(null);\n        setUser(null);\n    };\n\n    useEffect(() => {\n        const refreshAuthToken = async () => {\n            if (refreshToken && isTokenExpired(token)) {\n                try {\n                    const response = await axios.post('http://localhost:3000/refresh', { refreshToken });\n                    const { token: newToken, refreshToken: newRefreshToken } = response.data;\n                    login(newToken, newRefreshToken);\n                } catch (error) {\n                    console.error('Failed to refresh token:', error);\n                    logout();\n                }\n            } else if (token) {\n                decodeAndSetUser(token);\n            }\n        };\n\n        refreshAuthToken();\n    }, [token, refreshToken]);\n\n    return (\n        <AuthContext.Provider value={{ user, token, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
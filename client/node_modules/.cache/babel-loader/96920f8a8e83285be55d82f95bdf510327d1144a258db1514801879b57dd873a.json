{"ast":null,"code":"var _jsxFileName = \"/Users/jack/image-generator/client/src/pages/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jwtDecode } from 'jwt-decode'; // Ensure jwt-decode is installed\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { useProfile } from '../context/ProfileContext';\nimport debounce from 'lodash.debounce';\nimport './Profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  var _images$find;\n  const {\n    id\n  } = useParams();\n  const {\n    user\n  } = useAuth();\n  const {\n    profilePicture,\n    setProfilePicture\n  } = useProfile();\n  const [username, setUsername] = useState('');\n  const [bio, setBio] = useState('');\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [images, setImages] = useState([]);\n  const [modalImage, setModalImage] = useState(null);\n  const [activeImageId, setActiveImageId] = useState(null);\n  const [likes, setLikes] = useState({});\n  const [comments, setComments] = useState({});\n  const [commentInput, setCommentInput] = useState('');\n  const [userLikedImages, setUserLikedImages] = useState(new Set());\n  const [commentLikes, setCommentLikes] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [tempUsername, setTempUsername] = useState('');\n  const [tempBio, setTempBio] = useState('');\n  const [tempProfilePicture, setTempProfilePicture] = useState(null);\n  const [profilePictureFile, setProfilePictureFile] = useState(null);\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(true);\n  const debouncedOpenModal = useCallback(debounce(image => {\n    console.log('Opening modal for image ID:', image.id);\n    setModalImage(image); // Add this line\n    setActiveImageId(image.id);\n    setModalOpen(true);\n    fetchImageDetails(image.id);\n  }, 300), []);\n\n  // Add debug logs\n  useEffect(() => {\n    console.log('Modal state:', {\n      modalOpen,\n      modalImage,\n      activeImageId\n    });\n  }, [modalOpen, modalImage, activeImageId]);\n  useEffect(() => {\n    // Fetch user bio and posts\n    fetchUserProfile();\n  }, [id]);\n  useEffect(() => {\n    // Initialize temp values when entering edit mode\n    if (isEditing) {\n      setTempUsername(username);\n      setTempBio(bio);\n      setTempProfilePicture(profilePicture);\n      setProfilePictureFile(null);\n      setMessage(''); // Clear message when opening modal\n    }\n  }, [isEditing]);\n  useEffect(() => {\n    const fetchUserImages = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const loggedInUserId = localStorage.getItem('userId');\n\n        // If viewing own profile use localStorage userId, otherwise use URL id\n        const targetUserId = id === loggedInUserId ? loggedInUserId : id;\n        console.log('Fetching images for user:', targetUserId);\n        const response = await fetch(`http://localhost:3000/user_images/${targetUserId}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('Received images:', data);\n        setImages(data.images || []);\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n    fetchUserImages();\n  }, [id]); // Add id as dependency to re-fetch when URL changes\n\n  const fetchUserProfile = async () => {\n    if (!id) return;\n    try {\n      console.log('Starting profile fetch for ID:', id);\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:3000/user_profile/${id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      console.log('Profile data received:', data);\n      setUsername(data.username);\n      setBio(data.bio || '');\n\n      // Standardize URL construction\n      if (data.profile_picture) {\n        const baseUrl = 'http://localhost:3000';\n        const picturePath = data.profile_picture.startsWith('/') ? data.profile_picture : `/${data.profile_picture}`;\n        const profilePicUrl = `${baseUrl}${picturePath}`;\n        console.log('Constructed profile picture URL:', profilePicUrl);\n        console.log('Does file exist at path:', data.profile_picture);\n        setProfilePicture(profilePicUrl);\n      }\n    } catch (error) {\n      console.error('Error fetching profile:', error);\n      setProfilePicture('/default-avatar.png');\n    }\n  };\n  const fetchImageDetails = async imageId => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    try {\n      const likeResponse = await fetch(`http://localhost:3000/fetch_likes?id=${imageId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (likeResponse.ok) {\n        const likeData = await likeResponse.json();\n        setLikes(prev => ({\n          ...prev,\n          [imageId]: likeData.likes || 0\n        }));\n        if (likeData.userHasLiked) {\n          setUserLikedImages(prev => new Set(prev).add(imageId));\n        }\n      }\n      const commentResponse = await fetch(`http://localhost:3000/fetch_comments?id=${imageId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (commentResponse.ok) {\n        const commentData = await commentResponse.json();\n        // Comments should now include profile_picture from backend\n        setComments(prev => ({\n          ...prev,\n          [imageId]: commentData.comments || []\n        }));\n      }\n    } catch (error) {\n      console.error('Error fetching image details:', error);\n    }\n  };\n  const handleProfilePictureChange = async e => {\n    const file = e.target.files[0];\n    if (file) {\n      setProfilePictureFile(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setTempProfilePicture(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n    try {\n      const token = localStorage.getItem('token');\n      const formData = new FormData();\n      if (profilePictureFile) {\n        formData.append('image', profilePictureFile); // Changed from 'profile_picture' to 'image'\n\n        const response = await fetch('http://localhost:3000/upload_profile_picture', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          },\n          body: formData\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.error || 'Failed to upload profile picture');\n        }\n        const data = await response.json();\n        setProfilePicture(data.profilePicturePath);\n      }\n      setIsEditing(false);\n      setMessage('Profile updated successfully');\n    } catch (error) {\n      console.error('Profile update error:', error);\n      setMessage(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCommentLike = async commentId => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    try {\n      const response = await fetch('http://localhost:3000/like_comment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          commentId\n        })\n      });\n      if (response.ok) {\n        setCommentLikes(prev => ({\n          ...prev,\n          [commentId]: !prev[commentId]\n        }));\n      }\n    } catch (error) {\n      console.error('Error liking comment:', error);\n    }\n  };\n\n  // Update comment state when adding new comment\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    try {\n      const decoded = jwtDecode(token);\n      const userId = decoded.userId;\n\n      // Post the new comment\n      const response = await fetch('http://localhost:3000/add_comment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          userId,\n          imageId: activeImageId,\n          comment: commentInput\n        })\n      });\n      if (response.ok) {\n        // After adding the comment, fetch all comments again\n        const commentsResponse = await fetch(`http://localhost:3000/fetch_comments?id=${activeImageId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (commentsResponse.ok) {\n          const commentsData = await commentsResponse.json();\n          // Update comments state with the latest comments\n          setComments(prev => ({\n            ...prev,\n            [activeImageId]: commentsData.comments // Use the fetched comments\n          }));\n          setCommentInput(''); // Clear the comment input\n        } else {\n          console.error('Error fetching comments:', await commentsResponse.json());\n        }\n      } else {\n        console.error('Error adding comment:', await response.json());\n      }\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n  const closeModal = () => {\n    setModalOpen(false);\n    setModalImage(null);\n    setActiveImageId(null);\n  };\n  const navigateImage = direction => {\n    const currentIndex = images.findIndex(img => img.id === activeImageId);\n    const newIndex = (currentIndex + direction + images.length) % images.length;\n    setActiveImageId(images[newIndex].id);\n    setModalImage(images[newIndex]);\n    fetchImageDetails(images[newIndex].id);\n  };\n  const isAdmin = user && user.role === 'admin';\n  const handleDeleteImage = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    try {\n      const response = await fetch(`http://localhost:3000/delete_image/${activeImageId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        setImages(images.filter(img => img.id !== activeImageId));\n        closeModal();\n      } else {\n        console.error('Failed to delete image');\n      }\n    } catch (error) {\n      console.error('Error deleting image:', error);\n    }\n  };\n  const handleLike = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    const userId = jwtDecode(token).userId;\n    const hasLiked = userLikedImages.has(activeImageId);\n    try {\n      const response = hasLiked ? await fetch('http://localhost:3000/remove_like', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          userId,\n          imageId: activeImageId\n        })\n      }) : await fetch('http://localhost:3000/add_like', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          userId,\n          imageId: activeImageId\n        })\n      });\n      if (response.ok) {\n        if (hasLiked) {\n          setLikes(prev => ({\n            ...prev,\n            [activeImageId]: (prev[activeImageId] || 0) - 1\n          }));\n          setUserLikedImages(prev => {\n            const newSet = new Set(prev);\n            newSet.delete(activeImageId);\n            return newSet;\n          });\n        } else {\n          setLikes(prev => ({\n            ...prev,\n            [activeImageId]: (prev[activeImageId] || 0) + 1\n          }));\n          setUserLikedImages(prev => new Set(prev).add(activeImageId));\n        }\n      }\n    } catch (error) {\n      console.error('Error toggling like:', error);\n    }\n  };\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleString();\n  };\n\n  // Add handler function\n  const handleUsernameClick = user_id => {\n    setModalImage(null); // Close modal\n    setModalOpen(false); // Reset modal state\n    navigate(`/profile/${user_id}`);\n  };\n  const constructProfilePicUrl = path => {\n    if (!path) return '/default-avatar.png';\n    const baseUrl = 'http://localhost:3000';\n    const picturePath = path.startsWith('/') ? path : `/${path}`;\n    return `${baseUrl}${picturePath}`;\n  };\n\n  // Add loading state\n  useEffect(() => {\n    let isMounted = true;\n    const fetchUserProfile = async () => {\n      if (!id) return;\n      try {\n        setIsLoading(true);\n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:3000/user_profile/${id}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        console.log('Profile data received:', data);\n        if (!isMounted) return;\n        setUsername(data.username);\n        setBio(data.bio || '');\n        const profilePicUrl = constructProfilePicUrl(data.profile_picture);\n        console.log('Setting final profile picture URL:', profilePicUrl);\n        setProfilePicture(profilePicUrl);\n      } catch (error) {\n        console.error('Error fetching profile:', error);\n        if (isMounted) setProfilePicture('/default-avatar.png');\n      } finally {\n        if (isMounted) setIsLoading(false);\n      }\n    };\n    fetchUserProfile();\n    return () => {\n      isMounted = false;\n    };\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-header\",\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: profilePicture,\n          alt: `${username}'s profile`,\n          className: \"profile-profile-picture\",\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = '/default-avatar.png';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-top\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile-username\",\n              children: username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 29\n            }, this), user && user.id === parseInt(id) && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"profile-edit-btn\",\n              onClick: () => setIsEditing(true),\n              children: \"Edit Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-number\",\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Following\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-number\",\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Followers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-number\",\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Likes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile-bio\",\n            children: bio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tab-btn active\",\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tab-btn\",\n        children: \"Likes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tab-btn\",\n        children: \"Tagged\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-grid\",\n      children: images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-item\",\n        onClick: () => debouncedOpenModal(image),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.image_url,\n          alt: image.prompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 25\n        }, this)\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 13\n    }, this), modalImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-modal-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-modal-main\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-modal-image-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"profile-close-button\",\n              onClick: closeModal,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"profile-nav-button profile-prev\",\n              onClick: () => navigateImage(-1),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u2039\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile-modal-image\",\n              src: modalImage.image_url,\n              alt: \"Enlarged\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 33\n            }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-delete-section\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"profile-delete-button\",\n                onClick: handleDeleteImage,\n                children: \"Delete Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"profile-nav-button profile-next\",\n              onClick: () => navigateImage(1),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u203A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-modal-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-modal-title\",\n              children: (_images$find = images.find(img => img.id === activeImageId)) === null || _images$find === void 0 ? void 0 : _images$find.prompt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-likes-section\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `profile-like-button ${userLikedImages.has(activeImageId) ? 'liked' : ''}`,\n                onClick: handleLike,\n                children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: `profile-like-heart ${userLikedImages.has(activeImageId) ? 'liked' : ''}`,\n                  viewBox: \"0 0 24 24\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"profile-like-count\",\n                  children: likes[activeImageId] || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-comments-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"profile-comments-heading\",\n                children: \"Comments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"profile-comments-list\",\n                children: (comments[activeImageId] || []).map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"profile-comment-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"profile-comment-avatar\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: comment.profile_picture ? `http://localhost:3000/${comment.profile_picture}` : '/default-avatar.png',\n                      alt: comment.username,\n                      onError: e => e.target.src = '/default-avatar.png'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 554,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"profile-comment-content\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"profile-comment-header\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"profile-comment-username\",\n                        onClick: () => handleUsernameClick(comment.user_id),\n                        role: \"button\",\n                        tabIndex: 0,\n                        children: comment.username\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 564,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"profile-comment-time\",\n                        children: formatTimestamp(comment.created_at)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 572,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 563,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"profile-comment-text\",\n                      children: comment.comment\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 576,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"profile-comment-actions\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"profile-comment-like-btn\",\n                        onClick: () => handleCommentLike(comment.id),\n                        children: [\"\\u2665 \", commentLikes[comment.id] || 0]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 578,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 577,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 49\n                  }, this)]\n                }, `comment-${comment.id}-${comment.created_at}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleCommentSubmit,\n                className: \"profile-comment-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"profile-comment-input\",\n                  type: \"text\",\n                  value: commentInput,\n                  onChange: e => setCommentInput(e.target.value),\n                  placeholder: \"Add a comment...\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"profile-comment-submit\",\n                  children: \"Post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 17\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-edit-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-edit-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-edit-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"profile-edit-title\",\n            children: \"Edit Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"profile-edit-close\",\n            onClick: () => setIsEditing(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-edit-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-picture-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: tempProfilePicture || profilePicture,\n              alt: \"Profile\",\n              className: \"profile-edit-picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"profile-picture-input\",\n              accept: \"image/*\",\n              onChange: handleProfilePictureChange,\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"profile-picture-input\",\n              className: \"profile-picture-change-btn\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M12 16.5a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm0-2.5a2 2 0 100-4 2 2 0 000 4z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M20 4h-3.17L15 2H9L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V6h4.05l1.83-2h4.24l1.83 2H20v12z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 37\n              }, this), \"Change photo\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-edit-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: tempUsername,\n              onChange: e => setTempUsername(e.target.value),\n              className: \"profile-edit-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-edit-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Bio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: tempBio,\n              onChange: e => setTempBio(e.target.value),\n              className: \"profile-edit-input\",\n              rows: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-edit-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"profile-save-btn\",\n              onClick: handleSubmit,\n              disabled: loading,\n              children: loading ? 'Saving...' : 'Save'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 29\n          }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-message\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 442,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"5M/BH8H71n6ZWsGi3gx4pBwUT18=\", false, function () {\n  return [useParams, useAuth, useProfile, useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jwtDecode","useParams","useNavigate","useAuth","useProfile","debounce","jsxDEV","_jsxDEV","Profile","_s","_images$find","id","user","profilePicture","setProfilePicture","username","setUsername","bio","setBio","posts","setPosts","loading","setLoading","message","setMessage","isEditing","setIsEditing","images","setImages","modalImage","setModalImage","activeImageId","setActiveImageId","likes","setLikes","comments","setComments","commentInput","setCommentInput","userLikedImages","setUserLikedImages","Set","commentLikes","setCommentLikes","modalOpen","setModalOpen","tempUsername","setTempUsername","tempBio","setTempBio","tempProfilePicture","setTempProfilePicture","profilePictureFile","setProfilePictureFile","navigate","isLoading","setIsLoading","debouncedOpenModal","image","console","log","fetchImageDetails","fetchUserProfile","fetchUserImages","token","localStorage","getItem","loggedInUserId","targetUserId","response","fetch","headers","ok","Error","status","data","json","error","profile_picture","baseUrl","picturePath","startsWith","profilePicUrl","imageId","likeResponse","likeData","prev","userHasLiked","add","commentResponse","commentData","handleProfilePictureChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleSubmit","preventDefault","formData","FormData","append","method","body","profilePicturePath","handleCommentLike","commentId","JSON","stringify","handleCommentSubmit","decoded","userId","Authorization","comment","commentsResponse","commentsData","closeModal","navigateImage","direction","currentIndex","findIndex","img","newIndex","length","isAdmin","role","handleDeleteImage","filter","handleLike","hasLiked","has","newSet","delete","formatTimestamp","timestamp","date","Date","toLocaleString","handleUsernameClick","user_id","constructProfilePicUrl","path","isMounted","className","children","src","alt","onError","onerror","fileName","_jsxFileName","lineNumber","columnNumber","parseInt","onClick","map","image_url","prompt","find","viewBox","d","tabIndex","created_at","onSubmit","type","value","onChange","placeholder","required","accept","style","display","htmlFor","rows","disabled","_c","$RefreshReg$"],"sources":["/Users/jack/image-generator/client/src/pages/Profile.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { jwtDecode } from 'jwt-decode'; // Ensure jwt-decode is installed\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { useProfile } from '../context/ProfileContext';\nimport debounce from 'lodash.debounce';\nimport './Profile.css';\n\nconst Profile = () => {\n    const { id } = useParams();\n    const { user } = useAuth();\n    const { profilePicture, setProfilePicture } = useProfile();\n    const [username, setUsername] = useState('');\n    const [bio, setBio] = useState('');\n    const [posts, setPosts] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [message, setMessage] = useState('');\n    const [isEditing, setIsEditing] = useState(false);\n    const [images, setImages] = useState([]);\n    const [modalImage, setModalImage] = useState(null);\n    const [activeImageId, setActiveImageId] = useState(null);\n    const [likes, setLikes] = useState({});\n    const [comments, setComments] = useState({});\n    const [commentInput, setCommentInput] = useState('');\n    const [userLikedImages, setUserLikedImages] = useState(new Set());\n    const [commentLikes, setCommentLikes] = useState({});\n    const [modalOpen, setModalOpen] = useState(false);\n    const [tempUsername, setTempUsername] = useState('');\n    const [tempBio, setTempBio] = useState('');\n    const [tempProfilePicture, setTempProfilePicture] = useState(null);\n    const [profilePictureFile, setProfilePictureFile] = useState(null);\n    const navigate = useNavigate();\n    const [isLoading, setIsLoading] = useState(true);\n\n    const debouncedOpenModal = useCallback(\n        debounce((image) => {\n            console.log('Opening modal for image ID:', image.id);\n            setModalImage(image); // Add this line\n            setActiveImageId(image.id);\n            setModalOpen(true);\n            fetchImageDetails(image.id);\n        }, 300),\n        []\n    );\n\n    // Add debug logs\n    useEffect(() => {\n        console.log('Modal state:', { modalOpen, modalImage, activeImageId });\n    }, [modalOpen, modalImage, activeImageId]);\n\n    useEffect(() => {\n        // Fetch user bio and posts\n        fetchUserProfile();\n    }, [id]);\n\n    useEffect(() => {\n        // Initialize temp values when entering edit mode\n        if (isEditing) {\n            setTempUsername(username);\n            setTempBio(bio);\n            setTempProfilePicture(profilePicture);\n            setProfilePictureFile(null);\n            setMessage(''); // Clear message when opening modal\n        }\n    }, [isEditing]);\n\n    useEffect(() => {\n        const fetchUserImages = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                const loggedInUserId = localStorage.getItem('userId');\n                \n                // If viewing own profile use localStorage userId, otherwise use URL id\n                const targetUserId = id === loggedInUserId ? loggedInUserId : id;\n                \n                console.log('Fetching images for user:', targetUserId);\n                \n                const response = await fetch(`http://localhost:3000/user_images/${targetUserId}`, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`\n                    }\n                });\n\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                \n                const data = await response.json();\n                console.log('Received images:', data);\n                setImages(data.images || []);\n            } catch (error) {\n                console.error('Error fetching images:', error);\n            }\n        };\n\n        fetchUserImages();\n    }, [id]); // Add id as dependency to re-fetch when URL changes\n\n    const fetchUserProfile = async () => {\n        if (!id) return;\n        \n        try {\n            console.log('Starting profile fetch for ID:', id);\n            const token = localStorage.getItem('token');\n            const response = await fetch(`http://localhost:3000/user_profile/${id}`, {\n                headers: { 'Authorization': `Bearer ${token}` }\n            });\n            \n            const data = await response.json();\n            console.log('Profile data received:', data);\n            \n            setUsername(data.username);\n            setBio(data.bio || '');\n            \n            // Standardize URL construction\n            if (data.profile_picture) {\n                const baseUrl = 'http://localhost:3000';\n                const picturePath = data.profile_picture.startsWith('/') \n                    ? data.profile_picture \n                    : `/${data.profile_picture}`;\n                const profilePicUrl = `${baseUrl}${picturePath}`;\n                \n                console.log('Constructed profile picture URL:', profilePicUrl);\n                console.log('Does file exist at path:', data.profile_picture);\n                setProfilePicture(profilePicUrl);\n            }\n            \n        } catch (error) {\n            console.error('Error fetching profile:', error);\n            setProfilePicture('/default-avatar.png');\n        }\n    };\n\n    const fetchImageDetails = async (imageId) => {\n        const token = localStorage.getItem('token');\n        if (!token) return;\n    \n        try {\n            const likeResponse = await fetch(`http://localhost:3000/fetch_likes?id=${imageId}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n            if (likeResponse.ok) {\n                const likeData = await likeResponse.json();\n                setLikes((prev) => ({ ...prev, [imageId]: likeData.likes || 0 }));\n                if (likeData.userHasLiked) {\n                    setUserLikedImages((prev) => new Set(prev).add(imageId));\n                }\n            }\n    \n            const commentResponse = await fetch(`http://localhost:3000/fetch_comments?id=${imageId}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}` \n                }\n            });\n            if (commentResponse.ok) {\n                const commentData = await commentResponse.json();\n                // Comments should now include profile_picture from backend\n                setComments((prev) => ({ ...prev, [imageId]: commentData.comments || [] }));\n            }\n        } catch (error) {\n            console.error('Error fetching image details:', error);\n        }\n    };\n\n    const handleProfilePictureChange = async (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            setProfilePictureFile(file);\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                setTempProfilePicture(reader.result);\n            };\n            reader.readAsDataURL(file);\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        setMessage('');\n\n        try {\n            const token = localStorage.getItem('token');\n            const formData = new FormData();\n            \n            if (profilePictureFile) {\n                formData.append('image', profilePictureFile); // Changed from 'profile_picture' to 'image'\n                \n                const response = await fetch('http://localhost:3000/upload_profile_picture', {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `Bearer ${token}`\n                    },\n                    body: formData\n                });\n\n                if (!response.ok) {\n                    const error = await response.json();\n                    throw new Error(error.error || 'Failed to upload profile picture');\n                }\n\n                const data = await response.json();\n                setProfilePicture(data.profilePicturePath);\n            }\n\n            setIsEditing(false);\n            setMessage('Profile updated successfully');\n        } catch (error) {\n            console.error('Profile update error:', error);\n            setMessage(error.message);\n        } finally {\n            setLoading(false);\n        }\n    };\n    \n    const handleCommentLike = async (commentId) => {\n        const token = localStorage.getItem('token');\n        if (!token) return;\n    \n        try {\n            const response = await fetch('http://localhost:3000/like_comment', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify({ commentId })\n            });\n    \n            if (response.ok) {\n                setCommentLikes(prev => ({\n                    ...prev,\n                    [commentId]: !prev[commentId]\n                }));\n            }\n        } catch (error) {\n            console.error('Error liking comment:', error);\n        }\n    };\n    \n\n    \n        // Update comment state when adding new comment\n        const handleCommentSubmit = async (e) => {\n            e.preventDefault();\n            const token = localStorage.getItem('token');\n            if (!token) return;\n        \n            try {\n                const decoded = jwtDecode(token);\n                const userId = decoded.userId;\n        \n                // Post the new comment\n                const response = await fetch('http://localhost:3000/add_comment', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}`,\n                    },\n                    body: JSON.stringify({ userId, imageId: activeImageId, comment: commentInput }),\n                });\n        \n                if (response.ok) {\n                    // After adding the comment, fetch all comments again\n                    const commentsResponse = await fetch(`http://localhost:3000/fetch_comments?id=${activeImageId}`, {\n                        headers: {\n                            Authorization: `Bearer ${token}`,\n                        },\n                    });\n        \n                    if (commentsResponse.ok) {\n                        const commentsData = await commentsResponse.json();\n                        // Update comments state with the latest comments\n                        setComments((prev) => ({\n                            ...prev,\n                            [activeImageId]: commentsData.comments, // Use the fetched comments\n                        }));\n                        setCommentInput(''); // Clear the comment input\n                    } else {\n                        console.error('Error fetching comments:', await commentsResponse.json());\n                    }\n                } else {\n                    console.error('Error adding comment:', await response.json());\n                }\n            } catch (error) {\n                console.error('Error adding comment:', error);\n            }\n        };\n\n    const closeModal = () => {\n        setModalOpen(false);\n        setModalImage(null);\n        setActiveImageId(null);\n    };\n\n    const navigateImage = (direction) => {\n        const currentIndex = images.findIndex(img => img.id === activeImageId);\n        const newIndex = (currentIndex + direction + images.length) % images.length;\n        setActiveImageId(images[newIndex].id);\n        setModalImage(images[newIndex]);\n        fetchImageDetails(images[newIndex].id);\n    };\n\n    const isAdmin = user && user.role === 'admin';\n\n    const handleDeleteImage = async () => {\n        const token = localStorage.getItem('token');\n        if (!token) return;\n\n        try {\n            const response = await fetch(`http://localhost:3000/delete_image/${activeImageId}`, {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n\n            if (response.ok) {\n                setImages(images.filter(img => img.id !== activeImageId));\n                closeModal();\n            } else {\n                console.error('Failed to delete image');\n            }\n        } catch (error) {\n            console.error('Error deleting image:', error);\n        }\n    };\n\n    const handleLike = async () => {\n        const token = localStorage.getItem('token');\n        if (!token) return;\n\n        const userId = jwtDecode(token).userId;\n        const hasLiked = userLikedImages.has(activeImageId);\n\n        try {\n            const response = hasLiked \n                ? await fetch('http://localhost:3000/remove_like', {\n                    method: 'DELETE',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}`,\n                    },\n                    body: JSON.stringify({ userId, imageId: activeImageId }),\n                })\n                : await fetch('http://localhost:3000/add_like', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}`,\n                    },\n                    body: JSON.stringify({ userId, imageId: activeImageId }),\n                });\n\n            if (response.ok) {\n                if (hasLiked) {\n                    setLikes((prev) => ({\n                        ...prev,\n                        [activeImageId]: (prev[activeImageId] || 0) - 1,\n                    }));\n                    setUserLikedImages((prev) => {\n                        const newSet = new Set(prev);\n                        newSet.delete(activeImageId);\n                        return newSet;\n                    });\n                } else {\n                    setLikes((prev) => ({\n                        ...prev,\n                        [activeImageId]: (prev[activeImageId] || 0) + 1,\n                    }));\n                    setUserLikedImages((prev) => new Set(prev).add(activeImageId));\n                }\n            }\n        } catch (error) {\n            console.error('Error toggling like:', error);\n        }\n    };\n\n    const formatTimestamp = (timestamp) => {\n        const date = new Date(timestamp);\n        return date.toLocaleString();\n    };\n\n    // Add handler function\n    const handleUsernameClick = (user_id) => {\n        setModalImage(null); // Close modal\n        setModalOpen(false); // Reset modal state\n        navigate(`/profile/${user_id}`);\n    };\n\n    const constructProfilePicUrl = (path) => {\n        if (!path) return '/default-avatar.png';\n        const baseUrl = 'http://localhost:3000';\n        const picturePath = path.startsWith('/') ? path : `/${path}`;\n        return `${baseUrl}${picturePath}`;\n    };\n\n    // Add loading state\n    useEffect(() => {\n        let isMounted = true;\n        \n        const fetchUserProfile = async () => {\n            if (!id) return;\n            \n            try {\n                setIsLoading(true);\n                const token = localStorage.getItem('token');\n                const response = await fetch(`http://localhost:3000/user_profile/${id}`, {\n                    headers: { 'Authorization': `Bearer ${token}` }\n                });\n                \n                const data = await response.json();\n                console.log('Profile data received:', data);\n                \n                if (!isMounted) return;\n\n                setUsername(data.username);\n                setBio(data.bio || '');\n                \n                const profilePicUrl = constructProfilePicUrl(data.profile_picture);\n                console.log('Setting final profile picture URL:', profilePicUrl);\n                setProfilePicture(profilePicUrl);\n                \n            } catch (error) {\n                console.error('Error fetching profile:', error);\n                if (isMounted) setProfilePicture('/default-avatar.png');\n            } finally {\n                if (isMounted) setIsLoading(false);\n            }\n        };\n\n        fetchUserProfile();\n        \n        return () => {\n            isMounted = false;\n        };\n    }, [id]);\n\n    return (\n        <div className=\"profile-container\">\n            <div className=\"profile-header-wrapper\">\n                <div className=\"profile-header\">\n                    {!isLoading && (\n                        <img \n                            src={profilePicture} \n                            alt={`${username}'s profile`}\n                            className=\"profile-profile-picture\" \n                            onError={(e) => {\n                                e.target.onerror = null;\n                                e.target.src = '/default-avatar.png';\n                            }}\n                        />\n                    )}\n                    <div className=\"profile-info\">\n                        <div className=\"profile-top\">\n                            <h1 className=\"profile-username\">{username}</h1>\n                            {user && user.id === parseInt(id) && (\n                                <button className=\"profile-edit-btn\" onClick={() => setIsEditing(true)}>\n                                    Edit Profile\n                                </button>\n                            )}\n                        </div>\n                        \n                        <div className=\"profile-stats\">\n                            <div className=\"stat-item\">\n                                <span className=\"stat-number\">0</span>\n                                <span className=\"stat-label\">Following</span>\n                            </div>\n                            <div className=\"stat-item\">\n                                <span className=\"stat-number\">0</span>\n                                <span className=\"stat-label\">Followers</span>\n                            </div>\n                            <div className=\"stat-item\">\n                                <span className=\"stat-number\">0</span>\n                                <span className=\"stat-label\">Likes</span>\n                            </div>\n                        </div>\n                        \n                        <p className=\"profile-bio\">{bio}</p>\n                    </div>\n                </div>\n            </div>\n\n            {/* Add Tabs */}\n            <div className=\"profile-tabs\">\n                <button className=\"tab-btn active\">Posts</button>\n                <button className=\"tab-btn\">Likes</button>\n                <button className=\"tab-btn\">Tagged</button>\n            </div>\n\n            {/* Keep existing grid */}\n            <div className=\"profile-grid\">\n                {images.map((image) => (\n                    <div \n                        key={image.id} \n                        className=\"profile-item\"\n                        onClick={() => debouncedOpenModal(image)}\n                    >\n                        <img src={image.image_url} alt={image.prompt} />\n                    </div>\n                ))}\n            </div>\n\n            {modalImage && (\n                <div className=\"profile-modal\">\n                    <div className=\"profile-modal-content\">\n                        <div className=\"profile-modal-main\">\n                            <div className=\"profile-modal-image-container\">\n                                <button className=\"profile-close-button\" onClick={closeModal}>×</button>\n                                <button className=\"profile-nav-button profile-prev\" onClick={() => navigateImage(-1)}>\n                                    <span>‹</span>\n                                </button>\n                                <img className=\"profile-modal-image\" src={modalImage.image_url} alt=\"Enlarged\" />\n                                {isAdmin && (\n                                    <div className=\"profile-delete-section\">\n                                        <button className=\"profile-delete-button\" onClick={handleDeleteImage}>\n                                            Delete Image\n                                        </button>\n                                    </div>\n                                )}\n                                <button className=\"profile-nav-button profile-next\" onClick={() => navigateImage(1)}>\n                                    <span>›</span>\n                                </button>\n                            </div>\n                            <div className=\"profile-modal-info\">\n                                <div className=\"profile-modal-title\">\n                                    {images.find((img) => img.id === activeImageId)?.prompt}\n                                </div>\n                                <div className=\"profile-likes-section\">\n                                    <button \n                                        className={`profile-like-button ${userLikedImages.has(activeImageId) ? 'liked' : ''}`}\n                                        onClick={handleLike}\n                                    >\n                                        <svg \n                                            className={`profile-like-heart ${userLikedImages.has(activeImageId) ? 'liked' : ''}`} \n                                            viewBox=\"0 0 24 24\"\n                                        >\n                                            <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\" />\n                                        </svg>\n                                        <span className=\"profile-like-count\">\n                                            {likes[activeImageId] || 0}\n                                        </span>\n                                    </button>\n                                </div>\n\n                                <div className=\"profile-comments-section\">\n                                    <h4 className=\"profile-comments-heading\">Comments</h4>\n                                    <ul className=\"profile-comments-list\">\n                                        {(comments[activeImageId] || []).map((comment) => (\n                                            <li key={`comment-${comment.id}-${comment.created_at}`} className=\"profile-comment-item\">\n                                                <div className=\"profile-comment-avatar\">\n                                                    <img \n                                                        src={comment.profile_picture ? \n                                                            `http://localhost:3000/${comment.profile_picture}` : \n                                                            '/default-avatar.png'} \n                                                        alt={comment.username}\n                                                        onError={(e) => e.target.src = '/default-avatar.png'}\n                                                    />\n                                                </div>\n                                                <div className=\"profile-comment-content\">\n                                                    <div className=\"profile-comment-header\">\n                                                        <span \n                                                            className=\"profile-comment-username\"\n                                                            onClick={() => handleUsernameClick(comment.user_id)}\n                                                            role=\"button\"\n                                                            tabIndex={0}\n                                                        >\n                                                            {comment.username}\n                                                        </span>\n                                                        <span className=\"profile-comment-time\">\n                                                            {formatTimestamp(comment.created_at)}\n                                                        </span>\n                                                    </div>\n                                                    <p className=\"profile-comment-text\">{comment.comment}</p>\n                                                    <div className=\"profile-comment-actions\">\n                                                        <button \n                                                            className=\"profile-comment-like-btn\"\n                                                            onClick={() => handleCommentLike(comment.id)}\n                                                        >\n                                                            ♥ {commentLikes[comment.id] || 0}\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                    <form onSubmit={handleCommentSubmit} className=\"profile-comment-form\">\n                                        <input\n                                            className=\"profile-comment-input\"\n                                            type=\"text\"\n                                            value={commentInput}\n                                            onChange={(e) => setCommentInput(e.target.value)}\n                                            placeholder=\"Add a comment...\"\n                                            required\n                                        />\n                                        <button type=\"submit\" className=\"profile-comment-submit\">Post</button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {isEditing && (\n                <div className=\"profile-edit-modal\">\n                    <div className=\"profile-edit-modal-content\">\n                        <div className=\"profile-edit-header\">\n                            <h2 className=\"profile-edit-title\">Edit Profile</h2>\n                            <button className=\"profile-edit-close\" onClick={() => setIsEditing(false)}>×</button>\n                        </div>\n                        <div className=\"profile-edit-form\">\n                            <div className=\"profile-picture-section\">\n                                <img \n                                    src={tempProfilePicture || profilePicture} \n                                    alt=\"Profile\" \n                                    className=\"profile-edit-picture\" \n                                />\n                                <input\n                                    type=\"file\"\n                                    id=\"profile-picture-input\"\n                                    accept=\"image/*\"\n                                    onChange={handleProfilePictureChange}\n                                    style={{ display: 'none' }}\n                                />\n                                <label \n                                    htmlFor=\"profile-picture-input\" \n                                    className=\"profile-picture-change-btn\"\n                                >\n                                    <svg viewBox=\"0 0 24 24\">\n                                        <path d=\"M12 16.5a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm0-2.5a2 2 0 100-4 2 2 0 000 4z\"/>\n                                        <path d=\"M20 4h-3.17L15 2H9L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V6h4.05l1.83-2h4.24l1.83 2H20v12z\"/>\n                                    </svg>\n                                    Change photo\n                                </label>\n                            </div>\n\n                            <div className=\"profile-edit-field\">\n                                <label>Username</label>\n                                <input\n                                    type=\"text\"\n                                    value={tempUsername}\n                                    onChange={(e) => setTempUsername(e.target.value)}\n                                    className=\"profile-edit-input\"\n                                />\n                            </div>\n\n                            <div className=\"profile-edit-field\">\n                                <label>Bio</label>\n                                <textarea\n                                    value={tempBio}\n                                    onChange={(e) => setTempBio(e.target.value)}\n                                    className=\"profile-edit-input\"\n                                    rows={3}\n                                />\n                            </div>\n\n                            <div className=\"profile-edit-actions\">\n                                <button \n                                    className=\"profile-save-btn\"\n                                    onClick={handleSubmit}\n                                    disabled={loading}\n                                >\n                                    {loading ? 'Saving...' : 'Save'}\n                                </button>\n                            </div>\n\n                            {message && (\n                                <div className=\"profile-message\">\n                                    {message}\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/jack/image-generator/client/src/pages/ImageGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../context/AuthContext'; // Adjust path to your AuthContext\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport './ImageGenerator.css';\nimport LoraSelector from '../components/LoraSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGenerator = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [prompt, setPrompt] = useState('');\n  const [negativePrompt, setNegativePrompt] = useState('');\n  const [cfgScale, setCfgScale] = useState(7);\n  const [aspectRatio, setAspectRatio] = useState('Portrait');\n  const [image, setImage] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [enableUpscale, setEnableUpscale] = useState(false); // State for upscaling\n  const [spiral] = useState(\"Generating your image\");\n  const [spiral2] = useState(\"Generating your image\");\n  const spiralRef = useRef(null);\n  const spiral2Ref = useRef(null);\n  const [selectedLoras, setSelectedLoras] = useState({});\n  const [isLoraOpen, setIsLoraOpen] = useState(false);\n  const [categories, setCategories] = useState([]); // State for categories\n\n  const ANIMATION_DURATION = 2000; // 2 seconds for full animation\n  const ANIMATION_OFFSET = 500; // 0.5 second offset\n  const SPIRAL2_OFFSET = 4000; // Additional offset for second spiral\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n    try {\n      const {\n        exp\n      } = jwtDecode(token);\n      if (Date.now() >= exp * 1000) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('refreshToken');\n        navigate('/login');\n      } else {\n        setLoading(false);\n      }\n    } catch (error) {\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  // First spiral animation\n  useEffect(() => {\n    if (loading && spiralRef.current) {\n      spiralRef.current.innerHTML = '';\n      spiral.split('').forEach((char, i) => {\n        const div = document.createElement('div');\n        div.innerText = char;\n        div.classList.add('character');\n        div.style.setProperty('--i', i + 1);\n        // Start animation immediately but keep movement pattern\n        div.style.animationDelay = `${i * ANIMATION_DURATION / 16 - ANIMATION_OFFSET - ANIMATION_DURATION}ms`;\n        spiralRef.current.appendChild(div);\n      });\n    }\n  }, [loading, spiral]);\n\n  // Second spiral animation\n  useEffect(() => {\n    if (loading && spiral2Ref.current) {\n      spiral2Ref.current.innerHTML = '';\n      spiral2.split('').forEach((char, i) => {\n        const div = document.createElement('div');\n        div.innerText = char;\n        div.classList.add('character');\n        div.style.setProperty('--i', i + 1);\n        div.style.animationDelay = `${-(ANIMATION_OFFSET + SPIRAL2_OFFSET) + i * ANIMATION_DURATION / 16}ms`;\n        spiral2Ref.current.appendChild(div);\n      });\n    }\n    return () => {\n      if (spiral2Ref.current) {\n        spiral2Ref.current.innerHTML = '';\n      }\n    };\n  }, [loading, spiral2]);\n  const buildLoraString = () => {\n    return Object.entries(selectedLoras).map(([id, weight]) => `<lora:${id}:${weight}>`).join(' ');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    setLoading(true);\n    const token = localStorage.getItem('token');\n    console.log('Token:', token);\n    try {\n      const decoded = jwtDecode(token);\n      console.log('Decoded token:', decoded);\n      const dimensions = {\n        Portrait: {\n          width: 512,\n          height: 768,\n          hiresWidth: 1024,\n          hiresHeight: 1536\n        },\n        Landscape: {\n          width: 768,\n          height: 512,\n          hiresWidth: 1536,\n          hiresHeight: 1024\n        },\n        Square: {\n          width: 512,\n          height: 512,\n          hiresWidth: 1024,\n          hiresHeight: 1024\n        }\n      };\n      const {\n        width,\n        height,\n        hiresWidth,\n        hiresHeight\n      } = dimensions[aspectRatio];\n      const loraString = buildLoraString();\n      const finalPrompt = `${prompt} ${loraString}`;\n      const defaultNegativePrompt = \" artist tags, patreon text, text, logo, 3d, monochrome, watermark, text, thicc, missing fingers, extra arms, extra hands, extra limbs, easynegative, EasyNegativeV2, negative_hand, japanese, japanese text, worst quality, low quality, lowres, jpeg artifacts, bad anatomy, bad hands, watermark, ((extra fingers, door, big head)), long neck, character merging\";\n      const finalNegativePrompt = `${defaultNegativePrompt}, ${negativePrompt}`;\n      const payload = {\n        prompt: finalPrompt,\n        negativePrompt: finalNegativePrompt,\n        cfgScale,\n        steps: 20,\n        width,\n        height,\n        enable_hr: enableUpscale,\n        // Use the state for upscaling\n        denoising_strength: 0.5,\n        upscale_factor: enableUpscale ? 2 : 1,\n        // Set upscale factor based on state\n        hires_width: enableUpscale ? hiresWidth : width,\n        // Use hires width if upscaling\n        hires_height: enableUpscale ? hiresHeight : height,\n        // Use hires height if upscaling\n        categories: categories // Add categories array\n      };\n      const response = await fetch('http://localhost:3000/generate_image', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        setError(errorData.error || 'Failed to generate image');\n      } else {\n        const data = await response.json();\n        // Update to use base64 image data directly\n        setImage(`data:image/png;base64,${data.image}`);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Failed to generate image');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-generator\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-generator-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-generator-form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"image-generator-heading\",\n            children: \"Generate Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"image-generator-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-generator-form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"image-generator-label\",\n                htmlFor: \"prompt\",\n                children: \"Prompt:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"prompt\",\n                value: prompt,\n                onChange: e => setPrompt(e.target.value),\n                required: true,\n                className: \"image-generator-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-generator-form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"image-generator-label\",\n                htmlFor: \"negativePrompt\",\n                children: \"Negative Prompt:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"negativePrompt\",\n                value: negativePrompt,\n                onChange: e => setNegativePrompt(e.target.value),\n                placeholder: \"what to exclude\",\n                className: \"image-generator-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `lora-settings-button ${Object.keys(selectedLoras).length > 0 ? 'active' : ''}`,\n              onClick: () => setIsLoraOpen(true),\n              children: \"Lora Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(LoraSelector, {\n              selectedLoras: selectedLoras,\n              setSelectedLoras: setSelectedLoras,\n              isOpen: isLoraOpen,\n              onClose: () => setIsLoraOpen(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-generator-creative-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"image-generator-label\",\n                children: \"Creative Control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-generator-creative-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: `image-generator-creative-btn ${cfgScale === 1 ? 'selected' : ''}`,\n                  onClick: () => setCfgScale(1),\n                  children: \"Very Creative\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: `image-generator-creative-btn ${cfgScale === 7 ? 'selected' : ''}`,\n                  onClick: () => setCfgScale(7),\n                  children: \"Creative\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: `image-generator-creative-btn ${cfgScale === 15 ? 'selected' : ''}`,\n                  onClick: () => setCfgScale(15),\n                  children: \"Subtle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: `image-generator-creative-btn ${cfgScale === 30 ? 'selected' : ''}`,\n                  onClick: () => setCfgScale(30),\n                  children: \"Strict\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-generator-aspect-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"image-generator-label\",\n                children: \"Aspect Ratio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-generator-aspect-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: `image-generator-aspect-btn ${aspectRatio === 'Portrait' ? 'selected' : ''}`,\n                  onClick: () => setAspectRatio('Portrait'),\n                  children: \"Portrait\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: `image-generator-aspect-btn ${aspectRatio === 'Landscape' ? 'selected' : ''}`,\n                  onClick: () => setAspectRatio('Landscape'),\n                  children: \"Landscape\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: `image-generator-aspect-btn ${aspectRatio === 'Square' ? 'selected' : ''}`,\n                  onClick: () => setAspectRatio('Square'),\n                  children: \"Square\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-generator-upscale-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"image-generator-label\",\n                children: \"Upscale\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-generator-upscale-buttons\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: `image-generator-upscale-btn ${enableUpscale ? 'selected' : ''}`,\n                onClick: () => setEnableUpscale(prev => !prev),\n                children: enableUpscale ? 'On' : 'Off'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: loading,\n              className: `image-generator-submit-btn ${loading ? 'disabled' : ''}`,\n              children: loading ? 'Generating...' : 'Generate Image'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-generator-preview-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"image-generator-heading\",\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-content\",\n            children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\",\n              children: \"Generating...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this) : image ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              alt: \"Generated\",\n              className: \"generated-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-preview\",\n              children: \"Your image will appear here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageGenerator, \"y9QEe9eHiVhtf5xwG8guRw1vjFs=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = ImageGenerator;\nexport default ImageGenerator;\nvar _c;\n$RefreshReg$(_c, \"ImageGenerator\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","useNavigate","jwtDecode","LoraSelector","jsxDEV","_jsxDEV","ImageGenerator","_s","user","navigate","prompt","setPrompt","negativePrompt","setNegativePrompt","cfgScale","setCfgScale","aspectRatio","setAspectRatio","image","setImage","error","setError","loading","setLoading","enableUpscale","setEnableUpscale","spiral","spiral2","spiralRef","spiral2Ref","selectedLoras","setSelectedLoras","isLoraOpen","setIsLoraOpen","categories","setCategories","ANIMATION_DURATION","ANIMATION_OFFSET","SPIRAL2_OFFSET","token","localStorage","getItem","exp","Date","now","removeItem","current","innerHTML","split","forEach","char","i","div","document","createElement","innerText","classList","add","style","setProperty","animationDelay","appendChild","buildLoraString","Object","entries","map","id","weight","join","handleSubmit","e","preventDefault","console","log","decoded","dimensions","Portrait","width","height","hiresWidth","hiresHeight","Landscape","Square","loraString","finalPrompt","defaultNegativePrompt","finalNegativePrompt","payload","steps","enable_hr","denoising_strength","upscale_factor","hires_width","hires_height","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","placeholder","keys","length","onClick","isOpen","onClose","prev","disabled","src","alt","_c","$RefreshReg$"],"sources":["/Users/jack/image-generator/client/src/pages/ImageGenerator.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../context/AuthContext'; // Adjust path to your AuthContext\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport './ImageGenerator.css';\nimport LoraSelector from '../components/LoraSelector';\n\n\nconst ImageGenerator = () => {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [prompt, setPrompt] = useState('');\n  const [negativePrompt, setNegativePrompt] = useState('');\n  const [cfgScale, setCfgScale] = useState(7);\n  const [aspectRatio, setAspectRatio] = useState('Portrait');\n  const [image, setImage] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [enableUpscale, setEnableUpscale] = useState(false); // State for upscaling\n  const [spiral] = useState(\"Generating your image\");\n  const [spiral2] = useState(\"Generating your image\");\n  const spiralRef = useRef(null);\n  const spiral2Ref = useRef(null);\n  const [selectedLoras, setSelectedLoras] = useState({});\n  const [isLoraOpen, setIsLoraOpen] = useState(false);\n  const [categories, setCategories] = useState([]); // State for categories\n\n  const ANIMATION_DURATION = 2000; // 2 seconds for full animation\n  const ANIMATION_OFFSET = 500; // 0.5 second offset\n  const SPIRAL2_OFFSET = 4000; // Additional offset for second spiral\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    \n    if (!token) {\n      navigate('/login');\n      return;\n    }\n\n    try {\n      const { exp } = jwtDecode(token);\n      if (Date.now() >= exp * 1000) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('refreshToken');\n        navigate('/login');\n      } else {\n        setLoading(false);\n      }\n    } catch (error) {\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  // First spiral animation\n  useEffect(() => {\n    if (loading && spiralRef.current) {\n        spiralRef.current.innerHTML = '';\n      \n        spiral.split('').forEach((char, i) => {\n            const div = document.createElement('div');\n            div.innerText = char;\n            div.classList.add('character');\n            div.style.setProperty('--i', i + 1);\n            // Start animation immediately but keep movement pattern\n            div.style.animationDelay = `${(i * ANIMATION_DURATION / 16) - ANIMATION_OFFSET - ANIMATION_DURATION}ms`;\n            spiralRef.current.appendChild(div);\n        });\n    }\n}, [loading, spiral]);\n\n  // Second spiral animation\n  useEffect(() => {\n    if (loading && spiral2Ref.current) {\n      spiral2Ref.current.innerHTML = '';\n      \n      spiral2.split('').forEach((char, i) => {\n        const div = document.createElement('div');\n        div.innerText = char;\n        div.classList.add('character');\n        div.style.setProperty('--i', i + 1);\n        div.style.animationDelay = `${-(ANIMATION_OFFSET + SPIRAL2_OFFSET) + (i * ANIMATION_DURATION / 16)}ms`;\n        spiral2Ref.current.appendChild(div);\n      });\n    }\n    \n    return () => {\n      if (spiral2Ref.current) {\n        spiral2Ref.current.innerHTML = '';\n      }\n    };\n  }, [loading, spiral2]);\n\n  const buildLoraString = () => {\n    return Object.entries(selectedLoras)\n        .map(([id, weight]) => `<lora:${id}:${weight}>`)\n        .join(' ');\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(null);\n    setLoading(true);\n\n    const token = localStorage.getItem('token');\n    console.log('Token:', token);\n    \n    try {\n        const decoded = jwtDecode(token);\n        console.log('Decoded token:', decoded);\n        \n        const dimensions = {\n          Portrait: { width: 512, height: 768, hiresWidth: 1024, hiresHeight: 1536 },\n          Landscape: { width: 768, height: 512, hiresWidth: 1536, hiresHeight: 1024 },\n          Square: { width: 512, height: 512, hiresWidth: 1024, hiresHeight: 1024 }\n        };\n    \n        const { width, height, hiresWidth, hiresHeight } = dimensions[aspectRatio];\n    \n        const loraString = buildLoraString();\n        const finalPrompt = `${prompt} ${loraString}`;\n    \n        const defaultNegativePrompt = \" artist tags, patreon text, text, logo, 3d, monochrome, watermark, text, thicc, missing fingers, extra arms, extra hands, extra limbs, easynegative, EasyNegativeV2, negative_hand, japanese, japanese text, worst quality, low quality, lowres, jpeg artifacts, bad anatomy, bad hands, watermark, ((extra fingers, door, big head)), long neck, character merging\";\n        \n        const finalNegativePrompt = `${defaultNegativePrompt}, ${negativePrompt}`;\n    \n        const payload = {\n          prompt: finalPrompt,\n          negativePrompt: finalNegativePrompt,\n          cfgScale,\n          steps: 20,\n          width,\n          height,\n          enable_hr: enableUpscale, // Use the state for upscaling\n          denoising_strength: 0.5,\n          upscale_factor: enableUpscale ? 2 : 1, // Set upscale factor based on state\n          hires_width: enableUpscale ? hiresWidth : width, // Use hires width if upscaling\n          hires_height: enableUpscale ? hiresHeight : height, // Use hires height if upscaling\n          categories: categories // Add categories array\n        };\n\n        const response = await fetch('http://localhost:3000/generate_image', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify(payload)\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            setError(errorData.error || 'Failed to generate image');\n        } else {\n            const data = await response.json();\n            // Update to use base64 image data directly\n            setImage(`data:image/png;base64,${data.image}`);\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        setError('Failed to generate image');\n    } finally {\n        setLoading(false);\n    }\n};\n\n  return (\n    <div className=\"image-generator\">\n        <div className=\"image-generator-container\">\n            {/* Form Side */}\n            <div className=\"image-generator-form-container\">\n                <div className=\"content-wrapper\">\n                    <h2 className=\"image-generator-heading\">Generate Image</h2>\n                    <form onSubmit={handleSubmit} className=\"image-generator-form\">\n                        <div className=\"image-generator-form-group\">\n                            <label className=\"image-generator-label\" htmlFor=\"prompt\">Prompt:</label>\n                            <input\n                                type=\"text\"\n                                id=\"prompt\"\n                                value={prompt}\n                                onChange={(e) => setPrompt(e.target.value)}\n                                required \n                                className=\"image-generator-input\"\n                            />\n                        </div>\n                        <div className=\"image-generator-form-group\">\n                            <label className=\"image-generator-label\" htmlFor=\"negativePrompt\">Negative Prompt:</label>\n                            <input\n                                type=\"text\"\n                                id=\"negativePrompt\"\n                                value={negativePrompt}\n                                onChange={(e) => setNegativePrompt(e.target.value)}\n                                placeholder=\"what to exclude\"\n                                className=\"image-generator-input\"\n                            />\n                        </div>\n                        <button \n                            type=\"button\"\n                            className={`lora-settings-button ${Object.keys(selectedLoras).length > 0 ? 'active' : ''}`}\n                            onClick={() => setIsLoraOpen(true)}\n                        >\n                            Lora Settings\n                        </button>\n                        \n                        <LoraSelector \n                            selectedLoras={selectedLoras}\n                            setSelectedLoras={setSelectedLoras}\n                            isOpen={isLoraOpen}\n                            onClose={() => setIsLoraOpen(false)}\n                        />\n                        <div className=\"image-generator-creative-section\">\n                            <label className=\"image-generator-label\">Creative Control</label>\n                            <div className=\"image-generator-creative-buttons\">\n                                <button\n                                    type=\"button\"\n                                    className={`image-generator-creative-btn ${cfgScale === 1 ? 'selected' : ''}`}\n                                    onClick={() => setCfgScale(1)}\n                                >\n                                    Very Creative\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className={`image-generator-creative-btn ${cfgScale === 7 ? 'selected' : ''}`}\n                                    onClick={() => setCfgScale(7)}\n                                >\n                                    Creative\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className={`image-generator-creative-btn ${cfgScale === 15 ? 'selected' : ''}`}\n                                    onClick={() => setCfgScale(15)}\n                                >\n                                    Subtle\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className={`image-generator-creative-btn ${cfgScale === 30 ? 'selected' : ''}`}\n                                    onClick={() => setCfgScale(30)}\n                                >\n                                    Strict\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"image-generator-aspect-section\">\n                            <label className=\"image-generator-label\">Aspect Ratio</label>\n                            <div className=\"image-generator-aspect-buttons\">\n                                <button\n                                    type=\"button\"\n                                    className={`image-generator-aspect-btn ${aspectRatio === 'Portrait' ? 'selected' : ''}`}\n                                    onClick={() => setAspectRatio('Portrait')}\n                                >\n                                    Portrait\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className={`image-generator-aspect-btn ${aspectRatio === 'Landscape' ? 'selected' : ''}`}\n                                    onClick={() => setAspectRatio('Landscape')}\n                                >\n                                    Landscape\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className={`image-generator-aspect-btn ${aspectRatio === 'Square' ? 'selected' : ''}`}\n                                    onClick={() => setAspectRatio('Square')}\n                                >\n                                    Square\n                                </button>\n                            </div>\n                        </div>\n\n                        {/* Upscale Toggle Section */}\n                        <div className=\"image-generator-upscale-section\">\n                            <label className=\"image-generator-label\">Upscale</label>\n                            <div className=\"image-generator-upscale-buttons\"></div>\n                            <button\n                                type=\"button\"\n                                className={`image-generator-upscale-btn ${enableUpscale ? 'selected' : ''}`}\n                                onClick={() => setEnableUpscale((prev) => !prev)}\n                            >\n                                {enableUpscale ? 'On' : 'Off'}\n                            </button>\n                        </div>\n\n                        <button\n                            type=\"submit\"\n                            disabled={loading}\n                            className={`image-generator-submit-btn ${loading ? 'disabled' : ''}`}\n                        >\n                            {loading ? 'Generating...' : 'Generate Image'}\n                        </button>\n                    </form>\n                </div>\n            </div>\n\n            {/* Preview Side */}\n            <div className=\"image-generator-preview-container\">\n                <div className=\"content-wrapper\">\n                    <h2 className=\"image-generator-heading\">Preview</h2>\n                    <div className=\"preview-content\">\n                        {loading ? (\n                            <div className=\"loading-spinner\">Generating...</div>\n                        ) : image ? (\n                            <img src={image} alt=\"Generated\" className=\"generated-image\" />\n                        ) : (\n                            <div className=\"empty-preview\">Your image will appear here</div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n}\n\nexport default ImageGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
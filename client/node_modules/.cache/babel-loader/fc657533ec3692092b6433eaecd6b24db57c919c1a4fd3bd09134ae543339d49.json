{"ast":null,"code":"var _jsxFileName = \"/Users/jack/image-generator/client/src/components/GalleryModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jwtDecode } from 'jwt-decode'; // Ensure jwt-decode is installed\nimport { ReactComponent as LikeIcon } from '../assets/icons/like.svg';\nimport { ReactComponent as CommentIcon } from '../assets/icons/comment.svg';\nimport { ReactComponent as ShareIcon } from '../assets/icons/share.svg';\nimport { ReactComponent as BookmarkIcon } from '../assets/icons/bookmark.svg';\nimport './GalleryModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GalleryModal = ({\n  modalImage,\n  activeImageId,\n  isAdmin,\n  imageUserDetails,\n  onClose,\n  onNavigate,\n  onDelete,\n  onUsernameClick,\n  formatDate,\n  formatTimestamp\n}) => {\n  _s();\n  var _imageUserDetails$act, _imageUserDetails$act4, _images$find, _images$find2, _comments$activeImage;\n  // Local state moved from Gallery\n  const [commentInput, setCommentInput] = useState('');\n  const [likes, setLikes] = useState({});\n  const [comments, setComments] = useState({});\n  const [commentLikes, setCommentLikes] = useState({});\n  const [userLikedImages, setUserLikedImages] = useState(new Set());\n  const [userLikedComments, setUserLikedComments] = useState(new Set());\n  const [isPromptExpanded, setIsPromptExpanded] = useState(false);\n  const closeModal = () => {\n    onClose();\n  };\n\n  // Handle adding a comment\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    try {\n      const decoded = jwtDecode(token);\n      const userId = decoded.userId;\n      const response = await fetch('http://localhost:3000/add_comment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          userId,\n          imageId: activeImageId,\n          comment: commentInput\n        })\n      });\n      if (response.ok) {\n        // Refresh comments after successful post\n        const commentsResponse = await fetch(`http://localhost:3000/fetch_comments?id=${activeImageId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (commentsResponse.ok) {\n          const data = await commentsResponse.json();\n          setComments(prev => ({\n            ...prev,\n            [activeImageId]: data.comments\n          }));\n        } else {\n          console.error('Error fetching comments');\n        }\n      } else {\n        console.error('Error adding comment:', await response.json());\n      }\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n    setCommentInput('');\n  };\n\n  // Fetch updated like count for a comment\n  const fetchCommentLikeCount = async commentId => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch(`http://localhost:3000/comment_likes/${commentId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch like count');\n      const data = await response.json();\n      setCommentLikes(prev => ({\n        ...prev,\n        [commentId]: data.count\n      }));\n    } catch (error) {\n      console.error('Error fetching comment like count:', error);\n    }\n  };\n\n  // Toggle image like\n  const handleLike = async imageId => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    const isLiked = userLikedImages.has(imageId);\n    try {\n      const response = await fetch(`http://localhost:3000/likes/${imageId}`, {\n        method: isLiked ? 'DELETE' : 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to ${isLiked ? 'unlike' : 'like'} image`);\n      }\n      const data = await response.json();\n      setLikes(prev => ({\n        ...prev,\n        [imageId]: data.count\n      }));\n      setUserLikedImages(prev => {\n        const newSet = new Set(prev);\n        isLiked ? newSet.delete(imageId) : newSet.add(imageId);\n        return newSet;\n      });\n    } catch (error) {\n      console.error('Error toggling like:', error);\n    }\n  };\n\n  // Toggle comment like\n  const handleCommentLike = async commentId => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    const isLiked = userLikedComments.has(commentId);\n    try {\n      const response = await fetch(`http://localhost:3000/comment_likes/${commentId}`, {\n        method: isLiked ? 'DELETE' : 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to toggle comment like');\n      }\n      setUserLikedComments(prev => {\n        const newSet = new Set(prev);\n        isLiked ? newSet.delete(commentId) : newSet.add(commentId);\n        return newSet;\n      });\n      await fetchCommentLikeCount(commentId);\n    } catch (error) {\n      console.error('Error toggling comment like:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-modal-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-modal-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gallery-modal-image-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"gallery-close-button\",\n            onClick: closeModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"gallery-nav-button gallery-prev\",\n            onClick: () => onNavigate(-1),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2039\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"gallery-modal-image\",\n            src: modalImage,\n            alt: \"Enlarged\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-delete-section\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-delete-button\",\n              onClick: () => onDelete(activeImageId),\n              children: \"Delete Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"gallery-nav-button gallery-next\",\n            onClick: () => onNavigate(1),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u203A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gallery-modal-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: ((_imageUserDetails$act = imageUserDetails[activeImageId]) === null || _imageUserDetails$act === void 0 ? void 0 : _imageUserDetails$act.profile_picture) || '/default-avatar.png',\n              alt: \"Profile\",\n              className: \"gallery-user-avatar\",\n              onClick: () => {\n                var _imageUserDetails$act2;\n                return onUsernameClick((_imageUserDetails$act2 = imageUserDetails[activeImageId]) === null || _imageUserDetails$act2 === void 0 ? void 0 : _imageUserDetails$act2.user_id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gallery-user-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                onClick: () => {\n                  var _imageUserDetails$act3;\n                  return onUsernameClick((_imageUserDetails$act3 = imageUserDetails[activeImageId]) === null || _imageUserDetails$act3 === void 0 ? void 0 : _imageUserDetails$act3.user_id);\n                },\n                children: (_imageUserDetails$act4 = imageUserDetails[activeImageId]) === null || _imageUserDetails$act4 === void 0 ? void 0 : _imageUserDetails$act4.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gallery-creation-date\",\n                children: formatDate((_images$find = images.find(img => img.id === activeImageId)) === null || _images$find === void 0 ? void 0 : _images$find.created_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-follow-button\",\n              children: \"Follow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-modal-title\",\n            children: (_images$find2 = images.find(img => img.id === activeImageId)) === null || _images$find2 === void 0 ? void 0 : _images$find2.prompt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-interaction-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLike(activeImageId),\n              className: \"gallery-action-btn\",\n              children: [/*#__PURE__*/_jsxDEV(LikeIcon, {\n                className: userLikedImages.has(activeImageId) ? 'liked' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: likes[activeImageId] || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-action-btn\",\n              children: [/*#__PURE__*/_jsxDEV(CommentIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: ((_comments$activeImage = comments[activeImageId]) === null || _comments$activeImage === void 0 ? void 0 : _comments$activeImage.length) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-action-btn\",\n              children: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery-action-btn\",\n              children: /*#__PURE__*/_jsxDEV(BookmarkIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery-comments-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"gallery-comments-heading\",\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"gallery-comments-list\",\n              children: (comments[activeImageId] || []).map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"gallery-comment-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"gallery-comment-avatar\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: comment.profile_picture ? `http://localhost:3000/${comment.profile_picture}` : '/default-avatar.png',\n                    alt: comment.username,\n                    onError: e => e.target.src = '/default-avatar.png'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"gallery-comment-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"gallery-comment-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"gallery-comment-username\",\n                      onClick: () => onUsernameClick(comment.user_id),\n                      role: \"button\",\n                      tabIndex: 0,\n                      children: comment.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"gallery-comment-time\",\n                      children: formatTimestamp(comment.created_at)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"gallery-comment-text\",\n                    children: comment.comment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"gallery-comment-actions\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"gallery-comment-like-btn\",\n                      onClick: () => handleCommentLike(comment.id),\n                      children: [\"\\u2665 \", commentLikes[comment.id] || 0]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 41\n                }, this)]\n              }, `comment-${comment.id}-${comment.created_at}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleCommentSubmit,\n              className: \"gallery-comment-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"gallery-comment-input\",\n                type: \"text\",\n                value: commentInput,\n                onChange: e => setCommentInput(e.target.value),\n                placeholder: \"Add a comment...\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"gallery-comment-submit\",\n                children: \"Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n_s(GalleryModal, \"Hz9Si2xkhuRyyyRcfe+7tv3g4Gw=\");\n_c = GalleryModal;\nexport default GalleryModal;\nvar _c;\n$RefreshReg$(_c, \"GalleryModal\");","map":{"version":3,"names":["React","useState","jwtDecode","ReactComponent","LikeIcon","CommentIcon","ShareIcon","BookmarkIcon","jsxDEV","_jsxDEV","GalleryModal","modalImage","activeImageId","isAdmin","imageUserDetails","onClose","onNavigate","onDelete","onUsernameClick","formatDate","formatTimestamp","_s","_imageUserDetails$act","_imageUserDetails$act4","_images$find","_images$find2","_comments$activeImage","commentInput","setCommentInput","likes","setLikes","comments","setComments","commentLikes","setCommentLikes","userLikedImages","setUserLikedImages","Set","userLikedComments","setUserLikedComments","isPromptExpanded","setIsPromptExpanded","closeModal","handleCommentSubmit","e","preventDefault","token","localStorage","getItem","decoded","userId","response","fetch","method","headers","Authorization","body","JSON","stringify","imageId","comment","ok","commentsResponse","data","json","prev","console","error","fetchCommentLikeCount","commentId","Error","count","handleLike","isLiked","has","newSet","delete","add","handleCommentLike","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","profile_picture","_imageUserDetails$act2","user_id","_imageUserDetails$act3","username","images","find","img","id","created_at","prompt","length","map","onError","target","role","tabIndex","onSubmit","type","value","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/jack/image-generator/client/src/components/GalleryModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { jwtDecode } from 'jwt-decode'; // Ensure jwt-decode is installed\nimport { ReactComponent as LikeIcon } from '../assets/icons/like.svg';\nimport { ReactComponent as CommentIcon } from '../assets/icons/comment.svg';\nimport { ReactComponent as ShareIcon } from '../assets/icons/share.svg';\nimport { ReactComponent as BookmarkIcon } from '../assets/icons/bookmark.svg';\nimport './GalleryModal.css';\n\nconst GalleryModal = ({ \n    modalImage,\n    activeImageId,\n    isAdmin,\n    imageUserDetails,\n    onClose,\n    onNavigate,\n    onDelete,\n    onUsernameClick,\n    formatDate,\n    formatTimestamp,\n}) => {\n    // Local state moved from Gallery\n    const [commentInput, setCommentInput] = useState('');\n    const [likes, setLikes] = useState({});\n    const [comments, setComments] = useState({});\n    const [commentLikes, setCommentLikes] = useState({});\n    const [userLikedImages, setUserLikedImages] = useState(new Set());\n    const [userLikedComments, setUserLikedComments] = useState(new Set());\n    const [isPromptExpanded, setIsPromptExpanded] = useState(false);\n\n    const closeModal = () => {\n        onClose();\n    };\n\n    // Handle adding a comment\n    const handleCommentSubmit = async (e) => {\n        e.preventDefault();\n        const token = localStorage.getItem('token');\n        if (!token) return;\n        try {\n            const decoded = jwtDecode(token);\n            const userId = decoded.userId;\n            const response = await fetch('http://localhost:3000/add_comment', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify({ userId, imageId: activeImageId, comment: commentInput }),\n            });\n            if (response.ok) {\n                // Refresh comments after successful post\n                const commentsResponse = await fetch(`http://localhost:3000/fetch_comments?id=${activeImageId}`, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n                if (commentsResponse.ok) {\n                    const data = await commentsResponse.json();\n                    setComments(prev => ({\n                        ...prev,\n                        [activeImageId]: data.comments\n                    }));\n                } else {\n                    console.error('Error fetching comments');\n                }\n            } else {\n                console.error('Error adding comment:', await response.json());\n            }\n        } catch (error) {\n            console.error('Error adding comment:', error);\n        }\n        setCommentInput('');\n    };\n\n    // Fetch updated like count for a comment\n    const fetchCommentLikeCount = async (commentId) => {\n        const token = localStorage.getItem('token');\n        try {\n            const response = await fetch(`http://localhost:3000/comment_likes/${commentId}`, {\n                headers: { 'Authorization': `Bearer ${token}` }\n            });\n            if (!response.ok) throw new Error('Failed to fetch like count');\n            const data = await response.json();\n            setCommentLikes(prev => ({\n                ...prev,\n                [commentId]: data.count\n            }));\n        } catch (error) {\n            console.error('Error fetching comment like count:', error);\n        }\n    };\n\n    // Toggle image like\n    const handleLike = async (imageId) => {\n        const token = localStorage.getItem('token');\n        if (!token) return;\n        const isLiked = userLikedImages.has(imageId);\n        try {\n            const response = await fetch(`http://localhost:3000/likes/${imageId}`, {\n                method: isLiked ? 'DELETE' : 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                }\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to ${isLiked ? 'unlike' : 'like'} image`);\n            }\n            const data = await response.json();\n            setLikes(prev => ({\n                ...prev,\n                [imageId]: data.count\n            }));\n            setUserLikedImages(prev => {\n                const newSet = new Set(prev);\n                isLiked ? newSet.delete(imageId) : newSet.add(imageId);\n                return newSet;\n            });\n        } catch (error) {\n            console.error('Error toggling like:', error);\n        }\n    };\n\n    // Toggle comment like\n    const handleCommentLike = async (commentId) => {\n        const token = localStorage.getItem('token');\n        if (!token) return;\n        const isLiked = userLikedComments.has(commentId);\n        try {\n            const response = await fetch(`http://localhost:3000/comment_likes/${commentId}`, {\n                method: isLiked ? 'DELETE' : 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                }\n            });\n            if (!response.ok) {\n                throw new Error('Failed to toggle comment like');\n            }\n            setUserLikedComments(prev => {\n                const newSet = new Set(prev);\n                isLiked ? newSet.delete(commentId) : newSet.add(commentId);\n                return newSet;\n            });\n            await fetchCommentLikeCount(commentId);\n        } catch (error) {\n            console.error('Error toggling comment like:', error);\n        }\n    };\n\n    return (\n        <div className=\"gallery-modal\">\n            <div className=\"gallery-modal-content\">\n                <div className=\"gallery-modal-main\">\n                    <div className=\"gallery-modal-image-container\">\n                        <button className=\"gallery-close-button\" onClick={closeModal}>×</button>\n                        <button className=\"gallery-nav-button gallery-prev\" onClick={() => onNavigate(-1)}>\n                            <span>‹</span>\n                        </button>\n                        <img className=\"gallery-modal-image\" src={modalImage} alt=\"Enlarged\" />\n                        {isAdmin && (\n                            <div className=\"gallery-delete-section\">\n                                <button \n                                    className=\"gallery-delete-button\" \n                                    onClick={() => onDelete(activeImageId)}\n                                >\n                                    Delete Image\n                                </button>\n                            </div>\n                        )}\n                        <button className=\"gallery-nav-button gallery-next\" onClick={() => onNavigate(1)}>\n                            <span>›</span>\n                        </button>\n                    </div>\n                    <div className=\"gallery-modal-info\">\n                        <div className=\"gallery-user-info\">\n                            <img \n                                src={imageUserDetails[activeImageId]?.profile_picture || '/default-avatar.png'}\n                                alt=\"Profile\"\n                                className=\"gallery-user-avatar\"\n                                onClick={() => onUsernameClick(imageUserDetails[activeImageId]?.user_id)}\n                            />\n                            <div className=\"gallery-user-details\">\n                                <h4 onClick={() => onUsernameClick(imageUserDetails[activeImageId]?.user_id)}>\n                                    {imageUserDetails[activeImageId]?.username}\n                                </h4>\n                                <span className=\"gallery-creation-date\">\n                                    {formatDate(images.find(img => img.id === activeImageId)?.created_at)}\n                                </span>\n                            </div>\n                            <button className=\"gallery-follow-button\">Follow</button>\n                        </div>\n                        <div className=\"gallery-modal-title\">\n                            {images.find(img => img.id === activeImageId)?.prompt}\n                        </div>\n                        <div className=\"gallery-interaction-buttons\">\n                            <button onClick={() => handleLike(activeImageId)} className=\"gallery-action-btn\">\n                                <LikeIcon className={userLikedImages.has(activeImageId) ? 'liked' : ''} />\n                                <span>{likes[activeImageId] || 0}</span>\n                            </button>\n                            <button className=\"gallery-action-btn\">\n                                <CommentIcon />\n                                <span>{comments[activeImageId]?.length || 0}</span>\n                            </button>\n                            <button className=\"gallery-action-btn\">\n                                <ShareIcon />\n                            </button>\n                            <button className=\"gallery-action-btn\">\n                                <BookmarkIcon />\n                            </button>\n                        </div>\n                        <div className=\"gallery-comments-section\">\n                            <h4 className=\"gallery-comments-heading\">Comments</h4>\n                            <ul className=\"gallery-comments-list\">\n                                {(comments[activeImageId] || []).map((comment) => (\n                                    <li key={`comment-${comment.id}-${comment.created_at}`} className=\"gallery-comment-item\">\n                                        <div className=\"gallery-comment-avatar\">\n                                            <img \n                                                src={comment.profile_picture ? \n                                                    `http://localhost:3000/${comment.profile_picture}` : \n                                                    '/default-avatar.png'} \n                                                alt={comment.username}\n                                                onError={(e) => e.target.src = '/default-avatar.png'}\n                                            />\n                                        </div>\n                                        <div className=\"gallery-comment-content\">\n                                            <div className=\"gallery-comment-header\">\n                                                <span \n                                                    className=\"gallery-comment-username\"\n                                                    onClick={() => onUsernameClick(comment.user_id)}\n                                                    role=\"button\"\n                                                    tabIndex={0}\n                                                >\n                                                    {comment.username}\n                                                </span>\n                                                <span className=\"gallery-comment-time\">\n                                                    {formatTimestamp(comment.created_at)}\n                                                </span>\n                                            </div>\n                                            <p className=\"gallery-comment-text\">{comment.comment}</p>\n                                            <div className=\"gallery-comment-actions\">\n                                                <button \n                                                    className=\"gallery-comment-like-btn\"\n                                                    onClick={() => handleCommentLike(comment.id)}\n                                                >\n                                                    ♥ {commentLikes[comment.id] || 0}\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </li>\n                                ))}\n                            </ul>\n                            <form onSubmit={handleCommentSubmit} className=\"gallery-comment-form\">\n                                <input\n                                    className=\"gallery-comment-input\"\n                                    type=\"text\"\n                                    value={commentInput}\n                                    onChange={(e) => setCommentInput(e.target.value)}\n                                    placeholder=\"Add a comment...\"\n                                    required\n                                />\n                                <button type=\"submit\" className=\"gallery-comment-submit\">Post</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default GalleryModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}